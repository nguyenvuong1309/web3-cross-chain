/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MessageContract,
  MessageContractInterface,
} from "../../../contracts/sendMessageSameChain.sol/MessageContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getMessages",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104d2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b2f713221461003b578063de6f24bb14610064575b600080fd5b61004e6100493660046102a5565b610079565b60405161005b9190610314565b60405180910390f35b61007761007236600461038c565b610166565b005b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b8282101561015b5783829060005260206000200180546100ce9061044e565b80601f01602080910402602001604051908101604052809291908181526020018280546100fa9061044e565b80156101475780601f1061011c57610100808354040283529160200191610147565b820191906000526020600020905b81548152906001019060200180831161012a57829003601f168201915b5050505050815260200190600101906100af565b505050509050919050565b6001600160a01b038216600090815260208181526040822080546001810182559083529181902083516101a09391909101918401906101f0565b50816001600160a01b0316336001600160a01b03167fe2cf7446a11cbcd14cd99ea3a1bb77fb7653a64f4064d660140b5100d001e13c836040516101e49190610489565b60405180910390a35050565b8280546101fc9061044e565b90600052602060002090601f01602090048101928261021e5760008555610264565b82601f1061023757805160ff1916838001178555610264565b82800160010185558215610264579182015b82811115610264578251825591602001919060010190610249565b50610270929150610274565b5090565b5b808211156102705760008155600101610275565b80356001600160a01b03811681146102a057600080fd5b919050565b6000602082840312156102b757600080fd5b6102c082610289565b9392505050565b6000815180845260005b818110156102ed576020818501810151868301820152016102d1565b818111156102ff576000602083870101525b50601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561036957603f198886030184526103578583516102c7565b9450928501929085019060010161033b565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039f57600080fd5b6103a883610289565b9150602083013567ffffffffffffffff808211156103c557600080fd5b818501915085601f8301126103d957600080fd5b8135818111156103eb576103eb610376565b604051601f8201601f19908116603f0116810190838211818310171561041357610413610376565b8160405282815288602084870101111561042c57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c9082168061046257607f821691505b6020821081141561048357634e487b7160e01b600052602260045260246000fd5b50919050565b6020815260006102c060208301846102c756fea2646970667358221220e0c9f363ba7ff4702957ecab6d360bc28b69f00e4b7fd2a909f625685ce9a0b364736f6c63430008090033";

type MessageContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessageContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MessageContract__factory extends ContractFactory {
  constructor(...args: MessageContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MessageContract> {
    return super.deploy(overrides || {}) as Promise<MessageContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MessageContract {
    return super.attach(address) as MessageContract;
  }
  override connect(signer: Signer): MessageContract__factory {
    return super.connect(signer) as MessageContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageContractInterface {
    return new utils.Interface(_abi) as MessageContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageContract {
    return new Contract(address, _abi, signerOrProvider) as MessageContract;
  }
}
