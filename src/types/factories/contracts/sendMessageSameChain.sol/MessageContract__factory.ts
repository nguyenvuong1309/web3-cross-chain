/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MessageContract,
  MessageContractInterface,
} from "../../../contracts/sendMessageSameChain.sol/MessageContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getMessages",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107d2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b2f713221461003b578063de6f24bb1461006b575b600080fd5b61005560048036038101906100509190610394565b610087565b604051610062919061051c565b60405180910390f35b61008560048036038101906100809190610673565b61019e565b005b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610193578382906000526020600020018054610106906106fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610132906106fe565b801561017f5780601f106101545761010080835404028352916020019161017f565b820191906000526020600020905b81548152906001019060200180831161016257829003601f168201915b5050505050815260200190600101906100e7565b505050509050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061021592919061027f565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe2cf7446a11cbcd14cd99ea3a1bb77fb7653a64f4064d660140b5100d001e13c83604051610273919061077a565b60405180910390a35050565b82805461028b906106fe565b90600052602060002090601f0160209004810192826102ad57600085556102f4565b82601f106102c657805160ff19168380011785556102f4565b828001600101855582156102f4579182015b828111156102f35782518255916020019190600101906102d8565b5b5090506103019190610305565b5090565b5b8082111561031e576000816000905550600101610306565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061036182610336565b9050919050565b61037181610356565b811461037c57600080fd5b50565b60008135905061038e81610368565b92915050565b6000602082840312156103aa576103a961032c565b5b60006103b88482850161037f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561042757808201518184015260208101905061040c565b83811115610436576000848401525b50505050565b6000601f19601f8301169050919050565b6000610458826103ed565b61046281856103f8565b9350610472818560208601610409565b61047b8161043c565b840191505092915050565b6000610492838361044d565b905092915050565b6000602082019050919050565b60006104b2826103c1565b6104bc81856103cc565b9350836020820285016104ce856103dd565b8060005b8581101561050a57848403895281516104eb8582610486565b94506104f68361049a565b925060208a019950506001810190506104d2565b50829750879550505050505092915050565b6000602082019050818103600083015261053681846104a7565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105808261043c565b810181811067ffffffffffffffff8211171561059f5761059e610548565b5b80604052505050565b60006105b2610322565b90506105be8282610577565b919050565b600067ffffffffffffffff8211156105de576105dd610548565b5b6105e78261043c565b9050602081019050919050565b82818337600083830152505050565b6000610616610611846105c3565b6105a8565b90508281526020810184848401111561063257610631610543565b5b61063d8482856105f4565b509392505050565b600082601f83011261065a5761065961053e565b5b813561066a848260208601610603565b91505092915050565b6000806040838503121561068a5761068961032c565b5b60006106988582860161037f565b925050602083013567ffffffffffffffff8111156106b9576106b8610331565b5b6106c585828601610645565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061071657607f821691505b6020821081141561072a576107296106cf565b5b50919050565b600082825260208201905092915050565b600061074c826103ed565b6107568185610730565b9350610766818560208601610409565b61076f8161043c565b840191505092915050565b600060208201905081810360008301526107948184610741565b90509291505056fea2646970667358221220cbc1d0013ceaac9450c2173655ee65582aebaf9e808159e48ec903f57bf230ca64736f6c63430008090033";

type MessageContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessageContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MessageContract__factory extends ContractFactory {
  constructor(...args: MessageContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MessageContract> {
    return super.deploy(overrides || {}) as Promise<MessageContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MessageContract {
    return super.attach(address) as MessageContract;
  }
  override connect(signer: Signer): MessageContract__factory {
    return super.connect(signer) as MessageContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageContractInterface {
    return new utils.Interface(_abi) as MessageContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageContract {
    return new Contract(address, _abi, signerOrProvider) as MessageContract;
  }
}
