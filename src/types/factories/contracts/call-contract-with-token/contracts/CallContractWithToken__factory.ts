/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CallContractWithToken,
  CallContractWithTokenInterface,
} from "../../../../contracts/call-contract-with-token/contracts/CallContractWithToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gasReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "destinationAddresses",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendToMany",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620019933803806200199383398181016040528101906200003791906200017a565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200009f576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001c1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001428262000115565b9050919050565b620001548162000135565b81146200016057600080fd5b50565b600081519050620001748162000149565b92915050565b6000806040838503121562000194576200019362000110565b5b6000620001a48582860162000163565b9250506020620001b78582860162000163565b9150509250929050565b60805160a05161177b620002186000396000818161036501526105b00152600081816101150152818161015501528181610271015281816103ce015281816105070152818161064801526106fa015261177b6000f3fe60806040526004361061004a5760003560e01c8063116191b61461004f5780631a98b2e01461007a57806349160658146100a35780636a22d8cc146100cc578063fbd9497b146100f7575b600080fd5b34801561005b57600080fd5b50610064610113565b6040516100719190610921565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610a77565b610137565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b87565b610253565b005b3480156100d857600080fd5b506100e1610363565b6040516100ee9190610c71565b60405180910390f35b610111600480360381019061010c9190610e23565b610387565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60008585604051610149929190610f41565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631876eed98c8c8c8c8c878b8b8b6040518a63ffffffff1660e01b81526004016101bc99989796959493929190610fb6565b6020604051808303816000875af11580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff919061106a565b610235576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102468a8a8a8a8a8a8a8a8a6106e3565b5050505050505050505050565b60008282604051610265929190610f41565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f6970c38989898989876040518763ffffffff1660e01b81526004016102d296959493929190611097565b6020604051808303816000875af11580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610315919061106a565b61034b576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035987878787878761089a565b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600034116103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c19061113a565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663935b13f6846040518263ffffffff1660e01b815260040161042591906111c8565b602060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104669190611228565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104a593929190611264565b6020604051808303816000875af11580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e8919061106a565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161054492919061129b565b6020604051808303816000875af1158015610563573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610587919061106a565b506000858560405160200161059d92919061139c565b60405160208183030381529060405290507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c62c200234308b8b868a8a336040518963ffffffff1660e01b81526004016106149796959493929190611415565b6000604051808303818588803b15801561062d57600080fd5b505af1158015610641573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b541708489898488886040518663ffffffff1660e01b81526004016106a79594939291906114a0565b600060405180830381600087803b1580156106c157600080fd5b505af11580156106d5573d6000803e3d6000fd5b505050505050505050505050565b600085858101906106f491906115d2565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663935b13f686866040518363ffffffff1660e01b815260040161075392919061161b565b602060405180830381865afa158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190611228565b905060008251846107a5919061169d565b905060005b835181101561085f578273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8583815181106107e2576107e16116ce565b5b6020026020010151846040518363ffffffff1660e01b815260040161080892919061129b565b6020604051808303816000875af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b919061106a565b508080610857906116fd565b9150506107aa565b507f68f46c45a243a0e9065a97649faf9a5afe1692f2679e650c2f853b9cd734cc0e60405160405180910390a1505050505050505050505050565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108e76108e26108dd846108a2565b6108c2565b6108a2565b9050919050565b60006108f9826108cc565b9050919050565b600061090b826108ee565b9050919050565b61091b81610900565b82525050565b60006020820190506109366000830184610912565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61096381610950565b811461096e57600080fd5b50565b6000813590506109808161095a565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109ab576109aa610986565b5b8235905067ffffffffffffffff8111156109c8576109c761098b565b5b6020830191508360018202830111156109e4576109e3610990565b5b9250929050565b60008083601f840112610a0157610a00610986565b5b8235905067ffffffffffffffff811115610a1e57610a1d61098b565b5b602083019150836001820283011115610a3a57610a39610990565b5b9250929050565b6000819050919050565b610a5481610a41565b8114610a5f57600080fd5b50565b600081359050610a7181610a4b565b92915050565b60008060008060008060008060008060c08b8d031215610a9a57610a99610946565b5b6000610aa88d828e01610971565b9a505060208b013567ffffffffffffffff811115610ac957610ac861094b565b5b610ad58d828e01610995565b995099505060408b013567ffffffffffffffff811115610af857610af761094b565b5b610b048d828e01610995565b975097505060608b013567ffffffffffffffff811115610b2757610b2661094b565b5b610b338d828e016109eb565b955095505060808b013567ffffffffffffffff811115610b5657610b5561094b565b5b610b628d828e01610995565b935093505060a0610b758d828e01610a62565b9150509295989b9194979a5092959850565b60008060008060008060006080888a031215610ba657610ba5610946565b5b6000610bb48a828b01610971565b975050602088013567ffffffffffffffff811115610bd557610bd461094b565b5b610be18a828b01610995565b9650965050604088013567ffffffffffffffff811115610c0457610c0361094b565b5b610c108a828b01610995565b9450945050606088013567ffffffffffffffff811115610c3357610c3261094b565b5b610c3f8a828b016109eb565b925092505092959891949750929550565b6000610c5b826108ee565b9050919050565b610c6b81610c50565b82525050565b6000602082019050610c866000830184610c62565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cda82610c91565b810181811067ffffffffffffffff82111715610cf957610cf8610ca2565b5b80604052505050565b6000610d0c61093c565b9050610d188282610cd1565b919050565b600067ffffffffffffffff821115610d3857610d37610ca2565b5b610d4182610c91565b9050602081019050919050565b82818337600083830152505050565b6000610d70610d6b84610d1d565b610d02565b905082815260208101848484011115610d8c57610d8b610c8c565b5b610d97848285610d4e565b509392505050565b600082601f830112610db457610db3610986565b5b8135610dc4848260208601610d5d565b91505092915050565b60008083601f840112610de357610de2610986565b5b8235905067ffffffffffffffff811115610e0057610dff61098b565b5b602083019150836020820283011115610e1c57610e1b610990565b5b9250929050565b60008060008060008060a08789031215610e4057610e3f610946565b5b600087013567ffffffffffffffff811115610e5e57610e5d61094b565b5b610e6a89828a01610d9f565b965050602087013567ffffffffffffffff811115610e8b57610e8a61094b565b5b610e9789828a01610d9f565b955050604087013567ffffffffffffffff811115610eb857610eb761094b565b5b610ec489828a01610dcd565b9450945050606087013567ffffffffffffffff811115610ee757610ee661094b565b5b610ef389828a01610d9f565b9250506080610f0489828a01610a62565b9150509295509295509295565b600081905092915050565b6000610f288385610f11565b9350610f35838584610d4e565b82840190509392505050565b6000610f4e828486610f1c565b91508190509392505050565b610f6381610950565b82525050565b600082825260208201905092915050565b6000610f868385610f69565b9350610f93838584610d4e565b610f9c83610c91565b840190509392505050565b610fb081610a41565b82525050565b600060c082019050610fcb600083018c610f5a565b8181036020830152610fde818a8c610f7a565b90508181036040830152610ff381888a610f7a565b90506110026060830187610f5a565b8181036080830152611015818587610f7a565b905061102460a0830184610fa7565b9a9950505050505050505050565b60008115159050919050565b61104781611032565b811461105257600080fd5b50565b6000815190506110648161103e565b92915050565b6000602082840312156110805761107f610946565b5b600061108e84828501611055565b91505092915050565b60006080820190506110ac6000830189610f5a565b81810360208301526110bf818789610f7a565b905081810360408301526110d4818587610f7a565b90506110e36060830184610f5a565b979650505050505050565b7f476173207061796d656e74206973207265717569726564000000000000000000600082015250565b6000611124601783610f69565b915061112f826110ee565b602082019050919050565b6000602082019050818103600083015261115381611117565b9050919050565b600081519050919050565b60005b83811015611183578082015181840152602081019050611168565b60008484015250505050565b600061119a8261115a565b6111a48185610f69565b93506111b4818560208601611165565b6111bd81610c91565b840191505092915050565b600060208201905081810360008301526111e2818461118f565b905092915050565b60006111f5826108a2565b9050919050565b611205816111ea565b811461121057600080fd5b50565b600081519050611222816111fc565b92915050565b60006020828403121561123e5761123d610946565b5b600061124c84828501611213565b91505092915050565b61125e816111ea565b82525050565b60006060820190506112796000830186611255565b6112866020830185611255565b6112936040830184610fa7565b949350505050565b60006040820190506112b06000830185611255565b6112bd6020830184610fa7565b9392505050565b600082825260208201905092915050565b6000819050919050565b6112e8816111ea565b82525050565b60006112fa83836112df565b60208301905092915050565b600081359050611315816111fc565b92915050565b600061132a6020840184611306565b905092915050565b6000602082019050919050565b600061134b83856112c4565b9350611356826112d5565b8060005b8581101561138f5761136c828461131b565b61137688826112ee565b975061138183611332565b92505060018101905061135a565b5085925050509392505050565b600060208201905081810360008301526113b781848661133f565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006113e7826113c0565b6113f181856113cb565b9350611401818560208601611165565b61140a81610c91565b840191505092915050565b600060e08201905061142a600083018a611255565b818103602083015261143c818961118f565b90508181036040830152611450818861118f565b9050818103606083015261146481876113dc565b90508181036080830152611478818661118f565b905061148760a0830185610fa7565b61149460c0830184611255565b98975050505050505050565b600060a08201905081810360008301526114ba818861118f565b905081810360208301526114ce818761118f565b905081810360408301526114e281866113dc565b905081810360608301526114f6818561118f565b90506115056080830184610fa7565b9695505050505050565b600067ffffffffffffffff82111561152a57611529610ca2565b5b602082029050602081019050919050565b600061154e6115498461150f565b610d02565b9050808382526020820190506020840283018581111561157157611570610990565b5b835b8181101561159a57806115868882611306565b845260208401935050602081019050611573565b5050509392505050565b600082601f8301126115b9576115b8610986565b5b81356115c984826020860161153b565b91505092915050565b6000602082840312156115e8576115e7610946565b5b600082013567ffffffffffffffff8111156116065761160561094b565b5b611612848285016115a4565b91505092915050565b60006020820190508181036000830152611636818486610f7a565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116a882610a41565b91506116b383610a41565b9250826116c3576116c261163f565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061170882610a41565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361173a5761173961166e565b5b60018201905091905056fea26469706673582212209b40618d5f795a2fa0b8d78150cea1e56684543e2169b44feeffa5a4c6b0bd8064736f6c63430008140033";

type CallContractWithTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallContractWithTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallContractWithToken__factory extends ContractFactory {
  constructor(...args: CallContractWithTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    _gasReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CallContractWithToken> {
    return super.deploy(
      _gateway,
      _gasReceiver,
      overrides || {}
    ) as Promise<CallContractWithToken>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    _gasReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, _gasReceiver, overrides || {});
  }
  override attach(address: string): CallContractWithToken {
    return super.attach(address) as CallContractWithToken;
  }
  override connect(signer: Signer): CallContractWithToken__factory {
    return super.connect(signer) as CallContractWithToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallContractWithTokenInterface {
    return new utils.Interface(_abi) as CallContractWithTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallContractWithToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CallContractWithToken;
  }
}
