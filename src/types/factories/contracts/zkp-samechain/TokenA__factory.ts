/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenA,
  TokenAInterface,
} from "../../../contracts/zkp-samechain/TokenA";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DataSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendData",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenBridge",
        type: "address",
      },
    ],
    name: "setTokenBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBridge",
    outputs: [
      {
        internalType: "contract TokenBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200294c3803806200294c8339818101604052810190620000379190620002e8565b818181600390816200004a9190620005b8565b5080600490816200005c9190620005b8565b5050506200007f620000736200008760201b60201c565b6200008f60201b60201c565b50506200069f565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001be8262000173565b810181811067ffffffffffffffff82111715620001e057620001df62000184565b5b80604052505050565b6000620001f562000155565b9050620002038282620001b3565b919050565b600067ffffffffffffffff82111562000226576200022562000184565b5b620002318262000173565b9050602081019050919050565b60005b838110156200025e57808201518184015260208101905062000241565b60008484015250505050565b6000620002816200027b8462000208565b620001e9565b905082815260208101848484011115620002a0576200029f6200016e565b5b620002ad8482856200023e565b509392505050565b600082601f830112620002cd57620002cc62000169565b5b8151620002df8482602086016200026a565b91505092915050565b600080604083850312156200030257620003016200015f565b5b600083015167ffffffffffffffff81111562000323576200032262000164565b5b6200033185828601620002b5565b925050602083015167ffffffffffffffff81111562000355576200035462000164565b5b6200036385828601620002b5565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003c057607f821691505b602082108103620003d657620003d562000378565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000401565b6200044c868362000401565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000499620004936200048d8462000464565b6200046e565b62000464565b9050919050565b6000819050919050565b620004b58362000478565b620004cd620004c482620004a0565b8484546200040e565b825550505050565b600090565b620004e4620004d5565b620004f1818484620004aa565b505050565b5b8181101562000519576200050d600082620004da565b600181019050620004f7565b5050565b601f82111562000568576200053281620003dc565b6200053d84620003f1565b810160208510156200054d578190505b620005656200055c85620003f1565b830182620004f6565b50505b505050565b600082821c905092915050565b60006200058d600019846008026200056d565b1980831691505092915050565b6000620005a883836200057a565b9150826002028217905092915050565b620005c3826200036d565b67ffffffffffffffff811115620005df57620005de62000184565b5b620005eb8254620003a7565b620005f88282856200051d565b600060209050601f8311600181146200063057600084156200061b578287015190505b6200062785826200059a565b86555062000697565b601f1984166200064086620003dc565b60005b828110156200066a5784890151825560018201915060208501945060208101905062000643565b868310156200068a578489015162000686601f8916826200057a565b8355505b6001600288020188555050505b505050505050565b61229d80620006af6000396000f3fe60806040526004361061011f5760003560e01c8063715018a6116100a0578063a457c2d711610064578063a457c2d7146103c6578063a9059cbb14610403578063c6328a4614610440578063dd62ed3e1461046b578063f2fde38b146104a85761011f565b8063715018a61461031457806373b6b6c01461032b57806379cc6790146103475780638da5cb5b1461037057806395d89b411461039b5761011f565b806339509351116100e7578063395093511461021f57806339d048601461025c57806340c10f191461028557806342966c68146102ae57806370a08231146102d75761011f565b806306fdde0314610124578063095ea7b31461014f57806318160ddd1461018c57806323b872dd146101b7578063313ce567146101f4575b600080fd5b34801561013057600080fd5b506101396104d1565b60405161014691906115e8565b60405180910390f35b34801561015b57600080fd5b50610176600480360381019061017191906116a3565b610563565b60405161018391906116fe565b60405180910390f35b34801561019857600080fd5b506101a1610586565b6040516101ae9190611728565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190611743565b610590565b6040516101eb91906116fe565b60405180910390f35b34801561020057600080fd5b506102096105bf565b60405161021691906117b2565b60405180910390f35b34801561022b57600080fd5b50610246600480360381019061024191906116a3565b6105c8565b60405161025391906116fe565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e91906117cd565b6105ff565b005b34801561029157600080fd5b506102ac60048036038101906102a791906116a3565b6106ba565b005b3480156102ba57600080fd5b506102d560048036038101906102d091906117fa565b6106d0565b005b3480156102e357600080fd5b506102fe60048036038101906102f991906117cd565b6106dd565b60405161030b9190611728565b60405180910390f35b34801561032057600080fd5b50610329610725565b005b610345600480360381019061034091906116a3565b610739565b005b34801561035357600080fd5b5061036e600480360381019061036991906116a3565b610918565b005b34801561037c57600080fd5b5061038561098e565b6040516103929190611836565b60405180910390f35b3480156103a757600080fd5b506103b06109b8565b6040516103bd91906115e8565b60405180910390f35b3480156103d257600080fd5b506103ed60048036038101906103e891906116a3565b610a4a565b6040516103fa91906116fe565b60405180910390f35b34801561040f57600080fd5b5061042a600480360381019061042591906116a3565b610ac1565b60405161043791906116fe565b60405180910390f35b34801561044c57600080fd5b50610455610ae4565b60405161046291906118b0565b60405180910390f35b34801561047757600080fd5b50610492600480360381019061048d91906118cb565b610b0a565b60405161049f9190611728565b60405180910390f35b3480156104b457600080fd5b506104cf60048036038101906104ca91906117cd565b610b91565b005b6060600380546104e09061193a565b80601f016020809104026020016040519081016040528092919081815260200182805461050c9061193a565b80156105595780601f1061052e57610100808354040283529160200191610559565b820191906000526020600020905b81548152906001019060200180831161053c57829003601f168201915b5050505050905090565b60008061056e610c14565b905061057b818585610c1c565b600191505092915050565b6000600254905090565b60008061059b610c14565b90506105a8858285610de5565b6105b3858585610e71565b60019150509392505050565b60006012905090565b6000806105d3610c14565b90506105f48185856105e58589610b0a565b6105ef919061199a565b610c1c565b600191505092915050565b6106076110e7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90611a1a565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106c26110e7565b6106cc8282611165565b5050565b6106da33826112bb565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61072d6110e7565b6107376000611488565b565b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611a86565b60405180910390fd5b806107d4336106dd565b1015610815576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080c90611af2565b60405180910390fd5b61081f33826112bb565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca767d523484846040518463ffffffff1660e01b815260040161087d929190611b12565b6000604051808303818588803b15801561089657600080fd5b505af11580156108aa573d6000803e3d6000fd5b50505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fa66e03c9001bca5fd5a6b12c7ff0565f91adab37b440198b3d413712a3741f368360405161090c9190611728565b60405180910390a35050565b60006109248333610b0a565b905081811015610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096090611bad565b60405180910390fd5b61097f8333848461097a9190611bcd565b610c1c565b61098983836112bb565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546109c79061193a565b80601f01602080910402602001604051908101604052809291908181526020018280546109f39061193a565b8015610a405780601f10610a1557610100808354040283529160200191610a40565b820191906000526020600020905b815481529060010190602001808311610a2357829003601f168201915b5050505050905090565b600080610a55610c14565b90506000610a638286610b0a565b905083811015610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f90611c73565b60405180910390fd5b610ab58286868403610c1c565b60019250505092915050565b600080610acc610c14565b9050610ad9818585610e71565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b996110e7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bff90611d05565b60405180910390fd5b610c1181611488565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8290611d97565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf190611e29565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610dd89190611728565b60405180910390a3505050565b6000610df18484610b0a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e6b5781811015610e5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5490611e95565b60405180910390fd5b610e6a8484848403610c1c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed790611f27565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4690611fb9565b60405180910390fd5b610f5a83838361154e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd79061204b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110ce9190611728565b60405180910390a36110e1848484611553565b50505050565b6110ef610c14565b73ffffffffffffffffffffffffffffffffffffffff1661110d61098e565b73ffffffffffffffffffffffffffffffffffffffff1614611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a906120b7565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cb90612123565b60405180910390fd5b6111e06000838361154e565b80600260008282546111f2919061199a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112a39190611728565b60405180910390a36112b760008383611553565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361132a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611321906121b5565b60405180910390fd5b6113368260008361154e565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b390612247565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161146f9190611728565b60405180910390a361148383600084611553565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611592578082015181840152602081019050611577565b60008484015250505050565b6000601f19601f8301169050919050565b60006115ba82611558565b6115c48185611563565b93506115d4818560208601611574565b6115dd8161159e565b840191505092915050565b6000602082019050818103600083015261160281846115af565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061163a8261160f565b9050919050565b61164a8161162f565b811461165557600080fd5b50565b60008135905061166781611641565b92915050565b6000819050919050565b6116808161166d565b811461168b57600080fd5b50565b60008135905061169d81611677565b92915050565b600080604083850312156116ba576116b961160a565b5b60006116c885828601611658565b92505060206116d98582860161168e565b9150509250929050565b60008115159050919050565b6116f8816116e3565b82525050565b600060208201905061171360008301846116ef565b92915050565b6117228161166d565b82525050565b600060208201905061173d6000830184611719565b92915050565b60008060006060848603121561175c5761175b61160a565b5b600061176a86828701611658565b935050602061177b86828701611658565b925050604061178c8682870161168e565b9150509250925092565b600060ff82169050919050565b6117ac81611796565b82525050565b60006020820190506117c760008301846117a3565b92915050565b6000602082840312156117e3576117e261160a565b5b60006117f184828501611658565b91505092915050565b6000602082840312156118105761180f61160a565b5b600061181e8482850161168e565b91505092915050565b6118308161162f565b82525050565b600060208201905061184b6000830184611827565b92915050565b6000819050919050565b600061187661187161186c8461160f565b611851565b61160f565b9050919050565b60006118888261185b565b9050919050565b600061189a8261187d565b9050919050565b6118aa8161188f565b82525050565b60006020820190506118c560008301846118a1565b92915050565b600080604083850312156118e2576118e161160a565b5b60006118f085828601611658565b925050602061190185828601611658565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061195257607f821691505b6020821081036119655761196461190b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119a58261166d565b91506119b08361166d565b92508282019050808211156119c8576119c761196b565b5b92915050565b7f496e76616c696420546f6b656e42726964676520616464726573730000000000600082015250565b6000611a04601b83611563565b9150611a0f826119ce565b602082019050919050565b60006020820190508181036000830152611a33816119f7565b9050919050565b7f546f6b656e427269646765206e6f742073657400000000000000000000000000600082015250565b6000611a70601383611563565b9150611a7b82611a3a565b602082019050919050565b60006020820190508181036000830152611a9f81611a63565b9050919050565b7f496e73756666696369656e7420546f6b656e412062616c616e63650000000000600082015250565b6000611adc601b83611563565b9150611ae782611aa6565b602082019050919050565b60006020820190508181036000830152611b0b81611acf565b9050919050565b6000604082019050611b276000830185611827565b611b346020830184611719565b9392505050565b7f546f6b656e413a206275726e20616d6f756e74206578636565647320616c6c6f60008201527f77616e6365000000000000000000000000000000000000000000000000000000602082015250565b6000611b97602583611563565b9150611ba282611b3b565b604082019050919050565b60006020820190508181036000830152611bc681611b8a565b9050919050565b6000611bd88261166d565b9150611be38361166d565b9250828203905081811115611bfb57611bfa61196b565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611c5d602583611563565b9150611c6882611c01565b604082019050919050565b60006020820190508181036000830152611c8c81611c50565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611cef602683611563565b9150611cfa82611c93565b604082019050919050565b60006020820190508181036000830152611d1e81611ce2565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d81602483611563565b9150611d8c82611d25565b604082019050919050565b60006020820190508181036000830152611db081611d74565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e13602283611563565b9150611e1e82611db7565b604082019050919050565b60006020820190508181036000830152611e4281611e06565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611e7f601d83611563565b9150611e8a82611e49565b602082019050919050565b60006020820190508181036000830152611eae81611e72565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611f11602583611563565b9150611f1c82611eb5565b604082019050919050565b60006020820190508181036000830152611f4081611f04565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611fa3602383611563565b9150611fae82611f47565b604082019050919050565b60006020820190508181036000830152611fd281611f96565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612035602683611563565b915061204082611fd9565b604082019050919050565b6000602082019050818103600083015261206481612028565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006120a1602083611563565b91506120ac8261206b565b602082019050919050565b600060208201905081810360008301526120d081612094565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061210d601f83611563565b9150612118826120d7565b602082019050919050565b6000602082019050818103600083015261213c81612100565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061219f602183611563565b91506121aa82612143565b604082019050919050565b600060208201905081810360008301526121ce81612192565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612231602283611563565b915061223c826121d5565b604082019050919050565b6000602082019050818103600083015261226081612224565b905091905056fea2646970667358221220c4ac0e9be2ab6f998a70f87eb776d92fd2575ed511e1be33063e2158bb0e97eb64736f6c63430008140033";

type TokenAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenA__factory extends ContractFactory {
  constructor(...args: TokenAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenA> {
    return super.deploy(name, symbol, overrides || {}) as Promise<TokenA>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): TokenA {
    return super.attach(address) as TokenA;
  }
  override connect(signer: Signer): TokenA__factory {
    return super.connect(signer) as TokenA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenAInterface {
    return new utils.Interface(_abi) as TokenAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TokenA {
    return new Contract(address, _abi, signerOrProvider) as TokenA;
  }
}
