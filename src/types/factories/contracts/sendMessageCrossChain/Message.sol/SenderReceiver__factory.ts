/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SenderReceiver,
  SenderReceiverInterface,
} from "../../../../contracts/sendMessageCrossChain/Message.sol/SenderReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasService_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "message_",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620014f0380380620014f083398181016040528101906200003791906200017b565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000a0576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001c2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001438262000116565b9050919050565b620001558162000136565b81146200016157600080fd5b50565b60008151905062000175816200014a565b92915050565b6000806040838503121562000195576200019462000111565b5b6000620001a58582860162000164565b9250506020620001b88582860162000164565b9150509250929050565b60805160a0516112ec62000204600039600081816101710152610513015260008181610209015281816102a5015281816102e5015261041001526112ec6000f3fe6080604052600436106100555760003560e01c80630eabeffe1461005a578063116191b6146100765780631a98b2e0146100a157806349160658146100ca5780636a22d8cc146100f3578063e21f37ce1461011e575b600080fd5b610074600480360381019061006f91906107f5565b610149565b005b34801561008257600080fd5b5061008b6102a3565b6040516100989190610928565b60405180910390f35b3480156100ad57600080fd5b506100c860048036038101906100c39190610a05565b6102c7565b005b3480156100d657600080fd5b506100f160048036038101906100ec9190610b15565b6103f2565b005b3480156100ff57600080fd5b50610108610511565b6040516101159190610bff565b60405180910390f35b34801561012a57600080fd5b50610133610535565b6040516101409190610cb3565b60405180910390f35b6000828260405160200161015e929190610d11565b60405160208183030381529060405290507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630c93e3bb34308a8a8a8a88336040518963ffffffff1660e01b81526004016101d59796959493929190610dab565b6000604051808303818588803b1580156101ee57600080fd5b505af1158015610202573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631c92115f88888888866040518663ffffffff1660e01b8152600401610268959493929190610e17565b600060405180830381600087803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b5050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600085856040516102d9929190610e97565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631876eed98c8c8c8c8c878b8b8b6040518a63ffffffff1660e01b815260040161034c99989796959493929190610ece565b602060405180830381600087803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039e9190610f82565b6103d4576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e58a8a8a8a8a8a8a8a8a6105c3565b5050505050505050505050565b60008282604051610404929190610e97565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f6970c38989898989876040518763ffffffff1660e01b815260040161047196959493929190610faf565b602060405180830381600087803b15801561048b57600080fd5b505af115801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c39190610f82565b6104f9576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105078787878787876105ce565b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000805461054290611035565b80601f016020809104026020016040519081016040528092919081815260200182805461056e90611035565b80156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b505050505081565b505050505050505050565b81818101906105dd9190611188565b600090805190602001906105f29291906106d9565b507f4bb91efa6f101cb39247944090c1327252e3046492283c9246a07b9d01451f4e86868686600060405161062b959493929190611266565b60405180910390a16106ca868686866000805461064790611035565b80601f016020809104026020016040519081016040528092919081815260200182805461067390611035565b80156106c05780601f10610695576101008083540402835291602001916106c0565b820191906000526020600020905b8154815290600101906020018083116106a357829003601f168201915b50505050506106d2565b505050505050565b5050505050565b8280546106e590611035565b90600052602060002090601f016020900481019282610707576000855561074e565b82601f1061072057805160ff191683800117855561074e565b8280016001018555821561074e579182015b8281111561074d578251825591602001919060010190610732565b5b50905061075b919061075f565b5090565b5b80821115610778576000816000905550600101610760565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126107b5576107b4610790565b5b8235905067ffffffffffffffff8111156107d2576107d1610795565b5b6020830191508360018202830111156107ee576107ed61079a565b5b9250929050565b6000806000806000806060878903121561081257610811610786565b5b600087013567ffffffffffffffff8111156108305761082f61078b565b5b61083c89828a0161079f565b9650965050602087013567ffffffffffffffff81111561085f5761085e61078b565b5b61086b89828a0161079f565b9450945050604087013567ffffffffffffffff81111561088e5761088d61078b565b5b61089a89828a0161079f565b92509250509295509295509295565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108ee6108e96108e4846108a9565b6108c9565b6108a9565b9050919050565b6000610900826108d3565b9050919050565b6000610912826108f5565b9050919050565b61092281610907565b82525050565b600060208201905061093d6000830184610919565b92915050565b6000819050919050565b61095681610943565b811461096157600080fd5b50565b6000813590506109738161094d565b92915050565b60008083601f84011261098f5761098e610790565b5b8235905067ffffffffffffffff8111156109ac576109ab610795565b5b6020830191508360018202830111156109c8576109c761079a565b5b9250929050565b6000819050919050565b6109e2816109cf565b81146109ed57600080fd5b50565b6000813590506109ff816109d9565b92915050565b60008060008060008060008060008060c08b8d031215610a2857610a27610786565b5b6000610a368d828e01610964565b9a505060208b013567ffffffffffffffff811115610a5757610a5661078b565b5b610a638d828e0161079f565b995099505060408b013567ffffffffffffffff811115610a8657610a8561078b565b5b610a928d828e0161079f565b975097505060608b013567ffffffffffffffff811115610ab557610ab461078b565b5b610ac18d828e01610979565b955095505060808b013567ffffffffffffffff811115610ae457610ae361078b565b5b610af08d828e0161079f565b935093505060a0610b038d828e016109f0565b9150509295989b9194979a5092959850565b60008060008060008060006080888a031215610b3457610b33610786565b5b6000610b428a828b01610964565b975050602088013567ffffffffffffffff811115610b6357610b6261078b565b5b610b6f8a828b0161079f565b9650965050604088013567ffffffffffffffff811115610b9257610b9161078b565b5b610b9e8a828b0161079f565b9450945050606088013567ffffffffffffffff811115610bc157610bc061078b565b5b610bcd8a828b01610979565b925092505092959891949750929550565b6000610be9826108f5565b9050919050565b610bf981610bde565b82525050565b6000602082019050610c146000830184610bf0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c54578082015181840152602081019050610c39565b83811115610c63576000848401525b50505050565b6000601f19601f8301169050919050565b6000610c8582610c1a565b610c8f8185610c25565b9350610c9f818560208601610c36565b610ca881610c69565b840191505092915050565b60006020820190508181036000830152610ccd8184610c7a565b905092915050565b82818337600083830152505050565b6000610cf08385610c25565b9350610cfd838584610cd5565b610d0683610c69565b840190509392505050565b60006020820190508181036000830152610d2c818486610ce4565b90509392505050565b6000610d40826108a9565b9050919050565b610d5081610d35565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610d7d82610d56565b610d878185610d61565b9350610d97818560208601610c36565b610da081610c69565b840191505092915050565b600060a082019050610dc0600083018a610d47565b8181036020830152610dd381888a610ce4565b90508181036040830152610de8818688610ce4565b90508181036060830152610dfc8185610d72565b9050610e0b6080830184610d47565b98975050505050505050565b60006060820190508181036000830152610e32818789610ce4565b90508181036020830152610e47818587610ce4565b90508181036040830152610e5b8184610d72565b90509695505050505050565b600081905092915050565b6000610e7e8385610e67565b9350610e8b838584610cd5565b82840190509392505050565b6000610ea4828486610e72565b91508190509392505050565b610eb981610943565b82525050565b610ec8816109cf565b82525050565b600060c082019050610ee3600083018c610eb0565b8181036020830152610ef6818a8c610ce4565b90508181036040830152610f0b81888a610ce4565b9050610f1a6060830187610eb0565b8181036080830152610f2d818587610ce4565b9050610f3c60a0830184610ebf565b9a9950505050505050505050565b60008115159050919050565b610f5f81610f4a565b8114610f6a57600080fd5b50565b600081519050610f7c81610f56565b92915050565b600060208284031215610f9857610f97610786565b5b6000610fa684828501610f6d565b91505092915050565b6000608082019050610fc46000830189610eb0565b8181036020830152610fd7818789610ce4565b90508181036040830152610fec818587610ce4565b9050610ffb6060830184610eb0565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061104d57607f821691505b6020821081141561106157611060611006565b5b50919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110a482610c69565b810181811067ffffffffffffffff821117156110c3576110c261106c565b5b80604052505050565b60006110d661077c565b90506110e2828261109b565b919050565b600067ffffffffffffffff8211156111025761110161106c565b5b61110b82610c69565b9050602081019050919050565b600061112b611126846110e7565b6110cc565b90508281526020810184848401111561114757611146611067565b5b611152848285610cd5565b509392505050565b600082601f83011261116f5761116e610790565b5b813561117f848260208601611118565b91505092915050565b60006020828403121561119e5761119d610786565b5b600082013567ffffffffffffffff8111156111bc576111bb61078b565b5b6111c88482850161115a565b91505092915050565b60008190508160005260206000209050919050565b600081546111f381611035565b6111fd8186610c25565b94506001821660008114611218576001811461122a5761125d565b60ff198316865260208601935061125d565b611233856111d1565b60005b8381101561125557815481890152600182019150602081019050611236565b808801955050505b50505092915050565b60006060820190508181036000830152611281818789610ce4565b90508181036020830152611296818587610ce4565b905081810360408301526112aa81846111e6565b9050969550505050505056fea2646970667358221220d56e6c03471848a4805745494a0515c9446639409e1c68dc70d1abd8c8d58b6864736f6c63430008090033";

type SenderReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderReceiver__factory extends ContractFactory {
  constructor(...args: SenderReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gateway_: PromiseOrValue<string>,
    gasService_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SenderReceiver> {
    return super.deploy(
      gateway_,
      gasService_,
      overrides || {}
    ) as Promise<SenderReceiver>;
  }
  override getDeployTransaction(
    gateway_: PromiseOrValue<string>,
    gasService_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, gasService_, overrides || {});
  }
  override attach(address: string): SenderReceiver {
    return super.attach(address) as SenderReceiver;
  }
  override connect(signer: Signer): SenderReceiver__factory {
    return super.connect(signer) as SenderReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderReceiverInterface {
    return new utils.Interface(_abi) as SenderReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SenderReceiver {
    return new Contract(address, _abi, signerOrProvider) as SenderReceiver;
  }
}
