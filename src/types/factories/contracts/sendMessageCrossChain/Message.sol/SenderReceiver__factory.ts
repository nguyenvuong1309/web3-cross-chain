/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SenderReceiver,
  SenderReceiverInterface,
} from "../../../../contracts/sendMessageCrossChain/Message.sol/SenderReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasService_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "message_",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610eaa380380610eaa83398101604081905261002f9161008b565b816001600160a01b0381166100575760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b039081166080521660a052506100be565b80516001600160a01b038116811461008657600080fd5b919050565b6000806040838503121561009e57600080fd5b6100a78361006f565b91506100b56020840161006f565b90509250929050565b60805160a051610dac6100fe6000396000818161012201526101bb01526000818160910152818161025d0152818161032201526104250152610dac6000f3fe6080604052600436106100655760003560e01c8063491606581161004357806349160658146100f05780636a22d8cc14610110578063e21f37ce1461014457600080fd5b80630eabeffe1461006a578063116191b61461007f5780631a98b2e0146100d0575b600080fd5b61007d61007836600461075d565b610166565b005b34801561008b57600080fd5b506100b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100dc57600080fd5b5061007d6100eb3660046107f7565b6102d8565b3480156100fc57600080fd5b5061007d61010b3660046108d1565b6103db565b34801561011c57600080fd5b506100b37f000000000000000000000000000000000000000000000000000000000000000081565b34801561015057600080fd5b506101596104eb565b6040516100c791906109c2565b6000828260405160200161017b929190610a05565b60408051601f19818403018152908290527f0c93e3bb00000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb9034906101fe9030908c908c908c908c908a903390600401610a21565b6000604051808303818588803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b50506040517f1c92115f0000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f925061029d91508a908a908a908a908890600401610a84565b600060405180830381600087803b1580156102b757600080fd5b505af11580156102cb573d6000803e3d6000fd5b5050505050505050505050565b600085856040516102ea929190610acb565b6040519081900381207f1876eed900000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed990610367908e908e908e908e908e9089908d908d908d90600401610adb565b602060405180830381600087803b15801561038157600080fd5b505af1158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610b3a565b6103d657604051631403112d60e21b815260040160405180910390fd5b6102cb565b600082826040516103ed929190610acb565b6040519081900381207f5f6970c300000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610464908b908b908b908b908b908990600401610b5c565b602060405180830381600087803b15801561047e57600080fd5b505af1158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b69190610b3a565b6104d357604051631403112d60e21b815260040160405180910390fd5b6104e1878787878787610579565b5050505050505050565b600080546104f890610b9d565b80601f016020809104026020016040519081016040528092919081815260200182805461052490610b9d565b80156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b505050505081565b61058581830183610bee565b80516105999160009160209091019061067b565b507f4bb91efa6f101cb39247944090c1327252e3046492283c9246a07b9d01451f4e8686868660006040516105d2959493929190610c9f565b60405180910390a161067386868686600080546105ee90610b9d565b80601f016020809104026020016040519081016040528092919081815260200182805461061a90610b9d565b80156106675780601f1061063c57610100808354040283529160200191610667565b820191906000526020600020905b81548152906001019060200180831161064a57829003601f168201915b50505050505050505050565b505050505050565b82805461068790610b9d565b90600052602060002090601f0160209004810192826106a957600085556106ef565b82601f106106c257805160ff19168380011785556106ef565b828001600101855582156106ef579182015b828111156106ef5782518255916020019190600101906106d4565b506106fb9291506106ff565b5090565b5b808211156106fb5760008155600101610700565b60008083601f84011261072657600080fd5b50813567ffffffffffffffff81111561073e57600080fd5b60208301915083602082850101111561075657600080fd5b9250929050565b6000806000806000806060878903121561077657600080fd5b863567ffffffffffffffff8082111561078e57600080fd5b61079a8a838b01610714565b909850965060208901359150808211156107b357600080fd5b6107bf8a838b01610714565b909650945060408901359150808211156107d857600080fd5b506107e589828a01610714565b979a9699509497509295939492505050565b60008060008060008060008060008060c08b8d03121561081657600080fd5b8a35995060208b013567ffffffffffffffff8082111561083557600080fd5b6108418e838f01610714565b909b50995060408d013591508082111561085a57600080fd5b6108668e838f01610714565b909950975060608d013591508082111561087f57600080fd5b61088b8e838f01610714565b909750955060808d01359150808211156108a457600080fd5b506108b18d828e01610714565b9150809450508092505060a08b013590509295989b9194979a5092959850565b60008060008060008060006080888a0312156108ec57600080fd5b87359650602088013567ffffffffffffffff8082111561090b57600080fd5b6109178b838c01610714565b909850965060408a013591508082111561093057600080fd5b61093c8b838c01610714565b909650945060608a013591508082111561095557600080fd5b506109628a828b01610714565b989b979a50959850939692959293505050565b6000815180845260005b8181101561099b5760208185018101518683018201520161097f565b818111156109ad576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006109d56020830184610975565b9392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a196020830184866109dc565b949350505050565b60006001600160a01b03808a16835260a06020840152610a4560a08401898b6109dc565b8381036040850152610a5881888a6109dc565b90508381036060850152610a6c8187610975565b92505080841660808401525098975050505050505050565b606081526000610a986060830187896109dc565b8281036020840152610aab8186886109dc565b90508281036040840152610abf8185610975565b98975050505050505050565b8183823760009101908152919050565b89815260c060208201526000610af560c083018a8c6109dc565b8281036040840152610b0881898b6109dc565b90508660608401528281036080840152610b238186886109dc565b9150508260a08301529a9950505050505050505050565b600060208284031215610b4c57600080fd5b815180151581146109d557600080fd5b868152608060208201526000610b766080830187896109dc565b8281036040840152610b898186886109dc565b915050826060830152979650505050505050565b600181811c90821680610bb157607f821691505b60208210811415610bd257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610c0057600080fd5b813567ffffffffffffffff80821115610c1857600080fd5b818401915084601f830112610c2c57600080fd5b813581811115610c3e57610c3e610bd8565b604051601f8201601f19908116603f01168101908382118183101715610c6657610c66610bd8565b81604052828152876020848701011115610c7f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b606081526000610cb36060830187896109dc565b602083820381850152610cc78287896109dc565b915083820360408501526000855481600182811c915080831680610cec57607f831692505b858310811415610d0a57634e487b7160e01b85526022600452602485fd5b828752602087019650808015610d275760018114610d3857610d63565b60ff19851688528688019550610d63565b60008b81526020902060005b85811015610d5d5781548a820152908401908801610d44565b89019650505b50939d9c5050505050505050505050505056fea264697066735822122052eca878cbddf858599605c1f7587ee9f7558a2a05a729851f3b80dd48cbd58b64736f6c63430008090033";

type SenderReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderReceiver__factory extends ContractFactory {
  constructor(...args: SenderReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gateway_: PromiseOrValue<string>,
    gasService_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SenderReceiver> {
    return super.deploy(
      gateway_,
      gasService_,
      overrides || {}
    ) as Promise<SenderReceiver>;
  }
  override getDeployTransaction(
    gateway_: PromiseOrValue<string>,
    gasService_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, gasService_, overrides || {});
  }
  override attach(address: string): SenderReceiver {
    return super.attach(address) as SenderReceiver;
  }
  override connect(signer: Signer): SenderReceiver__factory {
    return super.connect(signer) as SenderReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderReceiverInterface {
    return new utils.Interface(_abi) as SenderReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SenderReceiver {
    return new Contract(address, _abi, signerOrProvider) as SenderReceiver;
  }
}
