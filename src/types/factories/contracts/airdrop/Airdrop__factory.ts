/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../contracts/airdrop/Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasReceiver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdropRecipients",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecipients",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "destinationAddresses",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendToMany",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516113b33803806113b383398101604081905261002f9161008b565b816001600160a01b0381166100575760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b039081166080521660a052506100be565b80516001600160a01b038116811461008657600080fd5b919050565b6000806040838503121561009e57600080fd5b6100a78361006f565b91506100b56020840161006f565b90509250929050565b60805160a0516112a061011360003960008181610145015261074401526000818160920152818161020a015281816103260152818161050b01528181610663015281816107e6015261087601526112a06000f3fe60806040526004361061007b5760003560e01c80636a22d8cc1161004e5780636a22d8cc14610133578063d524b0ff14610167578063d78d610b1461018b578063fbd9497b146101ad57600080fd5b8063116191b6146100805780631a98b2e0146100d157806349160658146100f3578063646304a114610113575b600080fd5b34801561008c57600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100dd57600080fd5b506100f16100ec366004610af5565b6101c0565b005b3480156100ff57600080fd5b506100f161010e366004610bcf565b6102dc565b34801561011f57600080fd5b506100b461012e366004610c73565b6103de565b34801561013f57600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b34801561017357600080fd5b5061017d60005481565b6040519081526020016100c8565b34801561019757600080fd5b506101a0610408565b6040516100c89190610c8c565b6100f16101bb366004610d90565b61046a565b600085856040516101d2929190610e7c565b6040519081900381207f1876eed900000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed99061024f908e908e908e908e908e9089908d908d908d90600401610eb5565b602060405180830381600087803b15801561026957600080fd5b505af115801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190610f14565b6102be57604051631403112d60e21b815260040160405180910390fd5b6102cf8a8a8a8a8a8a8a8a8a610862565b5050505050505050505050565b600082826040516102ee929190610e7c565b6040519081900381207f5f6970c300000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610365908b908b908b908b908b908990600401610f3d565b602060405180830381600087803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610f14565b6103d457604051631403112d60e21b815260040160405180910390fd5b5050505050505050565b600181815481106103ee57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600180548060200260200160405190810160405280929190818152602001828054801561046057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610442575b5050505050905090565b600034116104d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f476173207061796d656e74206973207265717569726564000000000000000000604482015260640160405180910390fd5b6040517f935b13f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063935b13f690610540908690600401610fcb565b60206040518083038186803b15801561055857600080fd5b505afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105909190610ff6565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd90606401602060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106329190610f14565b506040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820184905282169063095ea7b390604401602060405180830381600087803b1580156106b657600080fd5b505af11580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190610f14565b5060008585604051602001610704929190611013565b60408051601f19818403018152908290527fc62c200200000000000000000000000000000000000000000000000000000000825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c62c20029034906107879030908d908d9088908c908c903390600401611061565b6000604051808303818588803b1580156107a057600080fd5b505af11580156107b4573d6000803e3d6000fd5b50506040517fb54170840000000000000000000000000000000000000000000000000000000081526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016935063b5417084925061082691508b908b9086908a908a906004016110db565b600060405180830381600087803b15801561084057600080fd5b505af1158015610854573d6000803e3d6000fd5b505050505050505050505050565b60006108708587018761113b565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663935b13f686866040518363ffffffff1660e01b81526004016108c29291906111ed565b60206040518083038186803b1580156108da57600080fd5b505afa1580156108ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109129190610ff6565b6000849055825190915061092d906001906020850190610a1a565b50600082518461093d9190611209565b905060005b8351811015610a0b57826001600160a01b031663a9059cbb85838151811061096c5761096c61122b565b6020026020010151846040518363ffffffff1660e01b81526004016109a69291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156109c057600080fd5b505af11580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f89190610f14565b5080610a0381611241565b915050610942565b50505050505050505050505050565b828054828255906000526020600020908101928215610a87579160200282015b82811115610a8757825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178255602090920191600190910190610a3a565b50610a93929150610a97565b5090565b5b80821115610a935760008155600101610a98565b60008083601f840112610abe57600080fd5b50813567ffffffffffffffff811115610ad657600080fd5b602083019150836020828501011115610aee57600080fd5b9250929050565b60008060008060008060008060008060c08b8d031215610b1457600080fd5b8a35995060208b013567ffffffffffffffff80821115610b3357600080fd5b610b3f8e838f01610aac565b909b50995060408d0135915080821115610b5857600080fd5b610b648e838f01610aac565b909950975060608d0135915080821115610b7d57600080fd5b610b898e838f01610aac565b909750955060808d0135915080821115610ba257600080fd5b50610baf8d828e01610aac565b9150809450508092505060a08b013590509295989b9194979a5092959850565b60008060008060008060006080888a031215610bea57600080fd5b87359650602088013567ffffffffffffffff80821115610c0957600080fd5b610c158b838c01610aac565b909850965060408a0135915080821115610c2e57600080fd5b610c3a8b838c01610aac565b909650945060608a0135915080821115610c5357600080fd5b50610c608a828b01610aac565b989b979a50959850939692959293505050565b600060208284031215610c8557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610ccd5783516001600160a01b031683529284019291840191600101610ca8565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d1857610d18610cd9565b604052919050565b600082601f830112610d3157600080fd5b813567ffffffffffffffff811115610d4b57610d4b610cd9565b610d5e601f8201601f1916602001610cef565b818152846020838601011115610d7357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060a08789031215610da957600080fd5b863567ffffffffffffffff80821115610dc157600080fd5b610dcd8a838b01610d20565b97506020890135915080821115610de357600080fd5b610def8a838b01610d20565b96506040890135915080821115610e0557600080fd5b818901915089601f830112610e1957600080fd5b813581811115610e2857600080fd5b8a60208260051b8501011115610e3d57600080fd5b602083019650809550506060890135915080821115610e5b57600080fd5b50610e6889828a01610d20565b925050608087013590509295509295509295565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000610ecf60c083018a8c610e8c565b8281036040840152610ee281898b610e8c565b90508660608401528281036080840152610efd818688610e8c565b9150508260a08301529a9950505050505050505050565b600060208284031215610f2657600080fd5b81518015158114610f3657600080fd5b9392505050565b868152608060208201526000610f57608083018789610e8c565b8281036040840152610f6a818688610e8c565b915050826060830152979650505050505050565b6000815180845260005b81811015610fa457602081850181015186830182015201610f88565b81811115610fb6576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f366020830184610f7e565b6001600160a01b0381168114610ff357600080fd5b50565b60006020828403121561100857600080fd5b8151610f3681610fde565b60208082528181018390526000908460408401835b8681101561105657823561103b81610fde565b6001600160a01b031682529183019190830190600101611028565b509695505050505050565b60006001600160a01b03808a16835260e0602084015261108460e084018a610f7e565b8381036040850152611096818a610f7e565b905083810360608501526110aa8189610f7e565b905083810360808501526110be8188610f7e565b60a0850196909652509290921660c0909101525095945050505050565b60a0815260006110ee60a0830188610f7e565b82810360208401526111008188610f7e565b905082810360408401526111148187610f7e565b905082810360608401526111288186610f7e565b9150508260808301529695505050505050565b6000602080838503121561114e57600080fd5b823567ffffffffffffffff8082111561116657600080fd5b818501915085601f83011261117a57600080fd5b81358181111561118c5761118c610cd9565b8060051b915061119d848301610cef565b81815291830184019184810190888411156111b757600080fd5b938501935b838510156111e157843592506111d183610fde565b82825293850193908501906111bc565b98975050505050505050565b602081526000611201602083018486610e8c565b949350505050565b60008261122657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561126357634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ab6a7fc2032dbb2e8e94c475149ccf2edc03e1e396be07b1c44e69edf2b9a09564736f6c63430008090033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gateway_: PromiseOrValue<string>,
    gasReceiver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Airdrop> {
    return super.deploy(
      gateway_,
      gasReceiver_,
      overrides || {}
    ) as Promise<Airdrop>;
  }
  override getDeployTransaction(
    gateway_: PromiseOrValue<string>,
    gasReceiver_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, gasReceiver_, overrides || {});
  }
  override attach(address: string): Airdrop {
    return super.attach(address) as Airdrop;
  }
  override connect(signer: Signer): Airdrop__factory {
    return super.connect(signer) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new utils.Interface(_abi) as AirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Airdrop;
  }
}
