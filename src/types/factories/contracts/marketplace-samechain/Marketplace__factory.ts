/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../../contracts/marketplace-samechain/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "Offered",
    type: "event",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.Item[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "makeItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "purchaseItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d53380380610d5383398101604081905261002f91610040565b60016000553360805260a052610059565b60006020828403121561005257600080fd5b5051919050565b60805160a051610cc761008c6000396000818161017501526104cd01526000818161010501526106b40152610cc76000f3fe6080604052600436106100965760003560e01c80637fd6f15c11610069578063ca7dd3751161004e578063ca7dd37514610236578063d38ea5bf14610256578063fa00afc71461026b57600080fd5b80637fd6f15c14610163578063bfb231d21461019757600080fd5b80633129e7731461009b5780634ba1d6aa146100d157806365e17c9d146100f35780636bfb0d011461013f575b600080fd5b3480156100a757600080fd5b506100bb6100b6366004610a82565b61028b565b6040516100c89190610a9b565b60405180910390f35b3480156100dd57600080fd5b506100e661038e565b6040516100c89190610aef565b3480156100ff57600080fd5b506101277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c8565b34801561014b57600080fd5b5061015560015481565b6040519081526020016100c8565b34801561016f57600080fd5b506101557f000000000000000000000000000000000000000000000000000000000000000081565b3480156101a357600080fd5b506101fa6101b2366004610a82565b60026020819052600091825260409091208054600182015492820154600383015460049093015491936001600160a01b0390811693919290811690600160a01b900460ff1686565b604080519687526001600160a01b03958616602088015286019390935260608501919091529091166080830152151560a082015260c0016100c8565b34801561024257600080fd5b50610155610251366004610a82565b6104c4565b610269610264366004610a82565b61051e565b005b34801561027757600080fd5b50610269610286366004610b83565b61082a565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101919091526000821180156102cf57506001548211155b6103205760405162461bcd60e51b815260206004820152601260248201527f6974656d20646f65736e2774206578697374000000000000000000000000000060448201526064015b60405180910390fd5b50600090815260026020818152604092839020835160c0810185528154815260018201546001600160a01b03908116938201939093529281015493830193909352600383015460608301526004909201549182166080820152600160a01b90910460ff16151560a082015290565b6060600060015467ffffffffffffffff8111156103ad576103ad610bc4565b60405190808252806020026020018201604052801561040d57816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816103cb5790505b50905060015b60015481116104be57600081815260026020818152604092839020835160c081018552815481526001808301546001600160a01b0390811694830194909452938201549481019490945260038101546060850152600401549081166080840152600160a01b900460ff16151560a083015283906104909084610bf0565b815181106104a0576104a0610c07565b602002602001018190525080806104b690610c1d565b915050610413565b50919050565b600060646104f27f000000000000000000000000000000000000000000000000000000000000000082610c38565b60008481526002602052604090206003015461050e9190610c50565b6105189190610c6f565b92915050565b610526610a28565b6000610531826104c4565b6000838152600260205260409020909150821580159061055357506001548311155b61059f5760405162461bcd60e51b815260206004820152601260248201527f6974656d20646f65736e277420657869737400000000000000000000000000006044820152606401610317565b813410156106155760405162461bcd60e51b815260206004820152603360248201527f6e6f7420656e6f75676820657468657220746f20636f766572206974656d207060448201527f7269636520616e64206d61726b657420666565000000000000000000000000006064820152608401610317565b6004810154600160a01b900460ff16156106715760405162461bcd60e51b815260206004820152601160248201527f6974656d20616c726561647920736f6c640000000000000000000000000000006044820152606401610317565b600481015460038201546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156106b1573d6000803e3d6000fd5b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108fc8260030154846106ef9190610bf0565b6040518115909202916000818181858888f19350505050158015610717573d6000803e3d6000fd5b50600481810180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055600182015460028301546040516323b872dd60e01b8152309381019390935233602484015260448301526001600160a01b0316906323b872dd90606401600060405180830381600087803b1580156107a057600080fd5b505af11580156107b4573d6000803e3d6000fd5b50505050600481015460018201546002830154600384015460408051888152602081019390935282015233926001600160a01b039081169216907f8b4c9c8a607d67b321582dd8461041b1dc2ceeca70c8b7f37f8e02095cf2e76d9060600160405180910390a450506108276001600055565b50565b610832610a28565b600081116108825760405162461bcd60e51b815260206004820152601f60248201527f5072696365206d7573742062652067726561746572207468616e207a65726f006044820152606401610317565b6001805490600061089283610c1d565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd90606401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50506040805160c081018252600180548083526001600160a01b0389811660208086018281528688018c815260608089018d81523360808b01818152600060a08d018181529a81526002808952908e90209c518d5595518c8c018054918b167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790559351948b01949094555160038a015590516004909801805496511515600160a01b027fffffffffffffffffffffff00000000000000000000000000000000000000000090971698909516979097179490941790925592548551908152908101899052938401879052945092507f655a0cf9c8db81512be9a76dc1c5ae5380b8816ce6ad659cd61b715e2999d59a910160405180910390a3610a236001600055565b505050565b60026000541415610a7b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610317565b6002600055565b600060208284031215610a9457600080fd5b5035919050565b60c0810161051882848051825260208101516001600160a01b0380821660208501526040830151604085015260608301516060850152806080840151166080850152505060a0810151151560a08301525050565b6020808252825182820181905260009190848201906040850190845b81811015610b7757610b648385518051825260208101516001600160a01b0380821660208501526040830151604085015260608301516060850152806080840151166080850152505060a0810151151560a08301525050565b9284019260c09290920191600101610b0b565b50909695505050505050565b600080600060608486031215610b9857600080fd5b83356001600160a01b0381168114610baf57600080fd5b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610c0257610c02610bda565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610c3157610c31610bda565b5060010190565b60008219821115610c4b57610c4b610bda565b500190565b6000816000190483118215151615610c6a57610c6a610bda565b500290565b600082610c8c57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122068e0a1f3eefdb30dd9165dcb206ee9c8eb5352e1273f77e348b2432272e8f28664736f6c63430008090033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(_feePercent, overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feePercent, overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
