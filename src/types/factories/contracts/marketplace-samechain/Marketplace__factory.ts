/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../../contracts/marketplace-samechain/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "Offered",
    type: "event",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.Item[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract IERC721",
            name: "nft",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Marketplace.Item",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "makeItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "purchaseItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620017f1380380620017f18339818101604052810190620000379190620000c2565b60016000819055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a0818152505050620000f4565b600080fd5b6000819050919050565b6200009c8162000087565b8114620000a857600080fd5b50565b600081519050620000bc8162000091565b92915050565b600060208284031215620000db57620000da62000082565b5b6000620000eb84828501620000ab565b91505092915050565b60805160a0516116c9620001286000396000818161057b015261062c015260008181610551015261080c01526116c96000f3fe6080604052600436106100865760003560e01c80637fd6f15c116100595780637fd6f15c14610149578063bfb231d214610174578063ca7dd375146101b6578063d38ea5bf146101f3578063fa00afc71461020f57610086565b80633129e7731461008b5780634ba1d6aa146100c857806365e17c9d146100f35780636bfb0d011461011e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610d95565b610238565b6040516100bf9190610f07565b60405180910390f35b3480156100d457600080fd5b506100dd61039b565b6040516100ea919061104c565b60405180910390f35b3480156100ff57600080fd5b5061010861054f565b604051610115919061107d565b60405180910390f35b34801561012a57600080fd5b50610133610573565b60405161014091906110a7565b60405180910390f35b34801561015557600080fd5b5061015e610579565b60405161016b91906110a7565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190610d95565b61059d565b6040516101ad969594939291906110e0565b60405180910390f35b3480156101c257600080fd5b506101dd60048036038101906101d89190610d95565b610626565b6040516101ea91906110a7565b60405180910390f35b61020d60048036038101906102089190610d95565b610689565b005b34801561021b57600080fd5b5061023660048036038101906102319190611191565b610a11565b005b610240610cf6565b60008211801561025257506001548211155b610291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028890611241565b60405180910390fd5b600260008381526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff1615151515815250509050919050565b6060600060015467ffffffffffffffff8111156103bb576103ba611261565b5b6040519080825280602002602001820160405280156103f457816020015b6103e1610cf6565b8152602001906001900390816103d95790505b5090506000600190505b600154811161054757600260008281526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160149054906101000a900460ff1615151515815250508260018361051891906112bf565b81518110610529576105286112f3565b5b6020026020010181905250808061053f90611322565b9150506103fe565b508091505090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b600060647f00000000000000000000000000000000000000000000000000000000000000006064610657919061136a565b6002600085815260200190815260200160002060030154610678919061139e565b610682919061140f565b9050919050565b610691610c9d565b600061069c82610626565b905060006002600084815260200190815260200160002090506000831180156106c757506001548311155b610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611241565b60405180910390fd5b81341015610749576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610740906114b2565b60405180910390fd5b8060040160149054906101000a900460ff161561079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061151e565b60405180910390fd5b8060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600301549081150290604051600060405180830381858888f19350505050158015610809573d6000803e3d6000fd5b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc82600301548461085491906112bf565b9081150290604051600060405180830381858888f1935050505015801561087f573d6000803e3d6000fd5b5060018160040160146101000a81548160ff0219169083151502179055508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600201546040518463ffffffff1660e01b81526004016109029392919061154d565b600060405180830381600087803b15801561091c57600080fd5b505af1158015610930573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8b4c9c8a607d67b321582dd8461041b1dc2ceeca70c8b7f37f8e02095cf2e76d86856002015486600301546040516109fc93929190611584565b60405180910390a45050610a0e610cec565b50565b610a19610c9d565b60008111610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5390611607565b60405180910390fd5b60016000815480929190610a6f90611322565b91905055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ab19392919061154d565b600060405180830381600087803b158015610acb57600080fd5b505af1158015610adf573d6000803e3d6000fd5b505050506040518060c0016040528060015481526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600015158152506002600060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160040160146101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f655a0cf9c8db81512be9a76dc1c5ae5380b8816ce6ad659cd61b715e2999d59a6001548585604051610c8893929190611584565b60405180910390a3610c98610cec565b505050565b600260005403610ce2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd990611673565b60405180910390fd5b6002600081905550565b6001600081905550565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b600080fd5b6000819050919050565b610d7281610d5f565b8114610d7d57600080fd5b50565b600081359050610d8f81610d69565b92915050565b600060208284031215610dab57610daa610d5a565b5b6000610db984828501610d80565b91505092915050565b610dcb81610d5f565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e16610e11610e0c84610dd1565b610df1565b610dd1565b9050919050565b6000610e2882610dfb565b9050919050565b6000610e3a82610e1d565b9050919050565b610e4a81610e2f565b82525050565b6000610e5b82610dd1565b9050919050565b610e6b81610e50565b82525050565b60008115159050919050565b610e8681610e71565b82525050565b60c082016000820151610ea26000850182610dc2565b506020820151610eb56020850182610e41565b506040820151610ec86040850182610dc2565b506060820151610edb6060850182610dc2565b506080820151610eee6080850182610e62565b5060a0820151610f0160a0850182610e7d565b50505050565b600060c082019050610f1c6000830184610e8c565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60c082016000820151610f646000850182610dc2565b506020820151610f776020850182610e41565b506040820151610f8a6040850182610dc2565b506060820151610f9d6060850182610dc2565b506080820151610fb06080850182610e62565b5060a0820151610fc360a0850182610e7d565b50505050565b6000610fd58383610f4e565b60c08301905092915050565b6000602082019050919050565b6000610ff982610f22565b6110038185610f2d565b935061100e83610f3e565b8060005b8381101561103f5781516110268882610fc9565b975061103183610fe1565b925050600181019050611012565b5085935050505092915050565b600060208201905081810360008301526110668184610fee565b905092915050565b61107781610e50565b82525050565b6000602082019050611092600083018461106e565b92915050565b6110a181610d5f565b82525050565b60006020820190506110bc6000830184611098565b92915050565b6110cb81610e2f565b82525050565b6110da81610e71565b82525050565b600060c0820190506110f56000830189611098565b61110260208301886110c2565b61110f6040830187611098565b61111c6060830186611098565b611129608083018561106e565b61113660a08301846110d1565b979650505050505050565b600061114c82610dd1565b9050919050565b600061115e82611141565b9050919050565b61116e81611153565b811461117957600080fd5b50565b60008135905061118b81611165565b92915050565b6000806000606084860312156111aa576111a9610d5a565b5b60006111b88682870161117c565b93505060206111c986828701610d80565b92505060406111da86828701610d80565b9150509250925092565b600082825260208201905092915050565b7f6974656d20646f65736e27742065786973740000000000000000000000000000600082015250565b600061122b6012836111e4565b9150611236826111f5565b602082019050919050565b6000602082019050818103600083015261125a8161121e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ca82610d5f565b91506112d583610d5f565b92508282039050818111156112ed576112ec611290565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061132d82610d5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361135f5761135e611290565b5b600182019050919050565b600061137582610d5f565b915061138083610d5f565b925082820190508082111561139857611397611290565b5b92915050565b60006113a982610d5f565b91506113b483610d5f565b92508282026113c281610d5f565b915082820484148315176113d9576113d8611290565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061141a82610d5f565b915061142583610d5f565b925082611435576114346113e0565b5b828204905092915050565b7f6e6f7420656e6f75676820657468657220746f20636f766572206974656d207060008201527f7269636520616e64206d61726b65742066656500000000000000000000000000602082015250565b600061149c6033836111e4565b91506114a782611440565b604082019050919050565b600060208201905081810360008301526114cb8161148f565b9050919050565b7f6974656d20616c726561647920736f6c64000000000000000000000000000000600082015250565b60006115086011836111e4565b9150611513826114d2565b602082019050919050565b60006020820190508181036000830152611537816114fb565b9050919050565b61154781611141565b82525050565b6000606082019050611562600083018661153e565b61156f602083018561153e565b61157c6040830184611098565b949350505050565b60006060820190506115996000830186611098565b6115a66020830185611098565b6115b36040830184611098565b949350505050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f00600082015250565b60006115f1601f836111e4565b91506115fc826115bb565b602082019050919050565b60006020820190508181036000830152611620816115e4565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061165d601f836111e4565b915061166882611627565b602082019050919050565b6000602082019050818103600083015261168c81611650565b905091905056fea264697066735822122053dee2aca89143da07c40520bafce1d5aed77c2db301858c0d4a3aa3f3fcbf4a64736f6c63430008140033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(_feePercent, overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feePercent, overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
