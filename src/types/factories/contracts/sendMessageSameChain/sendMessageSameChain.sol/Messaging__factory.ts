/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Messaging,
  MessagingInterface,
} from "../../../../contracts/sendMessageSameChain/sendMessageSameChain.sol/Messaging";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "getMessages",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Messaging.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "getMessagesFrom",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Messaging.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610958806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636294bfec14610046578063b2f713221461006f578063de6f24bb14610082575b600080fd5b6100596100543660046106f0565b610097565b6040516100669190610712565b60405180910390f35b61005961007d3660046106f0565b61033b565b6100956100903660046107d6565b610460565b005b606060008060005b336000908152602081905260409020548110156101235733600090815260208190526040902080546001600160a01b0387169190839081106100e3576100e3610859565b60009182526020909120600390910201546001600160a01b03161415610111578261010d8161086f565b9350505b8061011b8161086f565b91505061009f565b5060008267ffffffffffffffff81111561013f5761013f610898565b60405190808252806020026020018201604052801561019d57816020015b61018a604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b81526020019060019003908161015d5790505b50905060005b336000908152602081905260409020548110156103325733600090815260208190526040902080546001600160a01b0388169190839081106101e7576101e7610859565b60009182526020909120600390910201546001600160a01b031614156103205733600090815260208190526040902080548290811061022857610228610859565b6000918252602091829020604080516060810190915260039092020180546001600160a01b031682526001810180549293919291840191610268906108ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610294906108ae565b80156102e15780601f106102b6576101008083540402835291602001916102e1565b820191906000526020600020905b8154815290600101906020018083116102c457829003601f168201915b5050505050815260200160028201548152505082848151811061030657610306610859565b6020026020010181905250828061031c9061086f565b9350505b8061032a8161086f565b9150506101a3565b50949350505050565b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b8282101561045557600084815260209081902060408051606081019091526003850290910180546001600160a01b0316825260018101805492939192918401916103ba906108ae565b80601f01602080910402602001604051908101604052809291908181526020018280546103e6906108ae565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b5050505050815260200160028201548152505081526020019060010190610371565b505050509050919050565b806104b25760405162461bcd60e51b815260206004820152601f60248201527f4d65737361676520636f6e74656e742063616e6e6f7420626520656d7074790060448201526064015b60405180910390fd5b6001600160a01b0383166105085760405162461bcd60e51b815260206004820152600f60248201527f496e76616c69642061646472657373000000000000000000000000000000000060448201526064016104a9565b60006040518060600160405280336001600160a01b0316815260200184848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250938552505042602093840152506001600160a01b0387811682528183526040822080546001808201835591845292849020855160039094020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001693909216929092178155838301518051949550859491936105d99385019291019061063b565b50604082015181600201555050836001600160a01b0316336001600160a01b03167f7e49d574e0305424aa957cb3f69b25f92aa58d53fdee73f05e40019210a70bce85854260405161062d939291906108e9565b60405180910390a350505050565b828054610647906108ae565b90600052602060002090601f01602090048101928261066957600085556106af565b82601f1061068257805160ff19168380011785556106af565b828001600101855582156106af579182015b828111156106af578251825591602001919060010190610694565b506106bb9291506106bf565b5090565b5b808211156106bb57600081556001016106c0565b80356001600160a01b03811681146106eb57600080fd5b919050565b60006020828403121561070257600080fd5b61070b826106d4565b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156107c757603f198a8503018652825160606001600160a01b03825116865289820151818b880152805180838901528592505b8083101561078e578183018c015188840160800152918b0191610770565b8083111561079f57856080828a0101525b928a0151878b0152505095880195601f01601f1916909301608001929187019160010161073a565b50919998505050505050505050565b6000806000604084860312156107eb57600080fd5b6107f4846106d4565b9250602084013567ffffffffffffffff8082111561081157600080fd5b818601915086601f83011261082557600080fd5b81358181111561083457600080fd5b87602082850101111561084657600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060001982141561089157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806108c257607f821691505b602082108114156108e357634e487b7160e01b600052602260045260246000fd5b50919050565b604081528260408201528284606083013760006060848301015260006060601f19601f860116830101905082602083015294935050505056fea2646970667358221220e495b5c42ccd742f4435601accee5204a202ff8cf13df27c1b4ffd5695a4736864736f6c63430008090033";

type MessagingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessagingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Messaging__factory extends ContractFactory {
  constructor(...args: MessagingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Messaging> {
    return super.deploy(overrides || {}) as Promise<Messaging>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Messaging {
    return super.attach(address) as Messaging;
  }
  override connect(signer: Signer): Messaging__factory {
    return super.connect(signer) as Messaging__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessagingInterface {
    return new utils.Interface(_abi) as MessagingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Messaging {
    return new Contract(address, _abi, signerOrProvider) as Messaging;
  }
}
