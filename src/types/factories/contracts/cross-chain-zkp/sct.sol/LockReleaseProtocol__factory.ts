/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LockReleaseProtocol,
  LockReleaseProtocolInterface,
} from "../../../../contracts/cross-chain-zkp/sct.sol/LockReleaseProtocol";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "DisputeInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "LockCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "intermediary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "LockRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "ReleaseCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "txId",
        type: "uint256",
      },
    ],
    name: "ReleaseRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "completeLock",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "initiateDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_intermediary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "requestLock",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
    ],
    name: "requestRelease",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "address",
        name: "intermediary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isLocked",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isReleased",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isDisputed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "txCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611165806100206000396000f3fe6080604052600436106100705760003560e01c806374f079b81161004e57806374f079b8146100f25780639ace38c21461011d578063c07a68fb14610162578063dedd6f291461017e57610070565b8063063d36a4146100755780634125ff901461009e57806371635c03146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610b0a565b61019a565b005b3480156100aa57600080fd5b506100b36103df565b6040516100c09190610b46565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610b0a565b6103e5565b005b3480156100fe57600080fd5b506101076105ff565b6040516101149190610b46565b60405180910390f35b34801561012957600080fd5b50610144600480360381019061013f9190610b0a565b610605565b60405161015999989796959493929190610bbd565b60405180910390f35b61017c60048036038101906101779190610c76565b6106ba565b005b61019860048036038101906101939190610b0a565b610936565b005b60006001600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023a90610d13565b60405180910390fd5b8060060160009054906101000a900460ff16610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028b90610d7f565b60405180910390fd5b8060060160019054906101000a900460ff16156102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd90610deb565b60405180910390fd5b60018160060160016101000a81548160ff0219169083151502179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826004015483600201546103559190610e3a565b9081150290604051600060405180830381858888f19350505050158015610380573d6000803e3d6000fd5b50817f8c37e6a05d6ac888c66681cc302e3fdbd1e18793e947acc4d65d34ff782eeb1b60405160405180910390a2817f594735391c467ce1c1e128f22f10f0741d670be24c0ab5599dadf151188bf48160405160405180910390a25050565b610e1081565b60006001600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048590610d13565b60405180910390fd5b8060060160019054906101000a900460ff16156104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790610deb565b60405180910390fd5b610e1081600501546104f29190610e3a565b4211610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a90610eba565b60405180910390fd5b60018160060160026101000a81548160ff0219169083151502179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826004015483600201546105a29190610e3a565b9081150290604051600060405180830381858888f193505050501580156105cd573d6000803e3d6000fd5b50817f116f6b179359db1a58a963fc783ee184e7844aba306a3c2ce02de3d7391d17c360405160405180910390a25050565b60005481565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16908060060160029054906101000a900460ff16905089565b8034116106fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f390610f26565b60405180910390fd5b6000813461070a9190610f46565b905060008081548092919061071e90610f7a565b91905055506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018281526020018381526020016000815260200142815260200160001515815260200160001515815260200160001515815250600160008054815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff0219169083151502179055506101008201518160060160026101000a81548160ff0219169083151502179055509050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff166000547f7ec84a4456fb51f01438265b6ef1357574ab99b59d207a6b6022f016ca904ee68486604051610929929190610fc2565b60405180910390a4505050565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690611037565b60405180910390fd5b8060060160009054906101000a900460ff1615610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a28906110a3565b60405180910390fd5b8060040154341015610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f9061110f565b60405180910390fd5b34816004018190555060018160060160006101000a81548160ff021916908315150217905550817f4ae3508399583bf7dd1752867b3758ee672e18d30340ddc1cfe70645610b392160405160405180910390a25050565b600080fd5b6000819050919050565b610ae781610ad4565b8114610af257600080fd5b50565b600081359050610b0481610ade565b92915050565b600060208284031215610b2057610b1f610acf565b5b6000610b2e84828501610af5565b91505092915050565b610b4081610ad4565b82525050565b6000602082019050610b5b6000830184610b37565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8c82610b61565b9050919050565b610b9c81610b81565b82525050565b60008115159050919050565b610bb781610ba2565b82525050565b600061012082019050610bd3600083018c610b93565b610be0602083018b610b93565b610bed604083018a610b37565b610bfa6060830189610b37565b610c076080830188610b37565b610c1460a0830187610b37565b610c2160c0830186610bae565b610c2e60e0830185610bae565b610c3c610100830184610bae565b9a9950505050505050505050565b610c5381610b81565b8114610c5e57600080fd5b50565b600081359050610c7081610c4a565b92915050565b60008060408385031215610c8d57610c8c610acf565b5b6000610c9b85828601610c61565b9250506020610cac85828601610af5565b9150509250929050565b600082825260208201905092915050565b7f4e6f742074686520706179657200000000000000000000000000000000000000600082015250565b6000610cfd600d83610cb6565b9150610d0882610cc7565b602082019050919050565b60006020820190508181036000830152610d2c81610cf0565b9050919050565b7f5472616e73616374696f6e206e6f74206c6f636b656400000000000000000000600082015250565b6000610d69601683610cb6565b9150610d7482610d33565b602082019050919050565b60006020820190508181036000830152610d9881610d5c565b9050919050565b7f416c72656164792072656c656173656400000000000000000000000000000000600082015250565b6000610dd5601083610cb6565b9150610de082610d9f565b602082019050919050565b60006020820190508181036000830152610e0481610dc8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e4582610ad4565b9150610e5083610ad4565b9250828201905080821115610e6857610e67610e0b565b5b92915050565b7f546f6f206561726c7920746f2064697370757465000000000000000000000000600082015250565b6000610ea4601483610cb6565b9150610eaf82610e6e565b602082019050919050565b60006020820190508181036000830152610ed381610e97565b9050919050565b7f56616c7565206d7573742062652067726561746572207468616e206665650000600082015250565b6000610f10601e83610cb6565b9150610f1b82610eda565b602082019050919050565b60006020820190508181036000830152610f3f81610f03565b9050919050565b6000610f5182610ad4565b9150610f5c83610ad4565b9250828203905081811115610f7457610f73610e0b565b5b92915050565b6000610f8582610ad4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fb757610fb6610e0b565b5b600182019050919050565b6000604082019050610fd76000830185610b37565b610fe46020830184610b37565b9392505050565b7f4e6f742074686520696e7465726d656469617279000000000000000000000000600082015250565b6000611021601483610cb6565b915061102c82610feb565b602082019050919050565b6000602082019050818103600083015261105081611014565b9050919050565b7f416c7265616479206c6f636b6564000000000000000000000000000000000000600082015250565b600061108d600e83610cb6565b915061109882611057565b602082019050919050565b600060208201905081810360008301526110bc81611080565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c000000000000000000600082015250565b60006110f9601783610cb6565b9150611104826110c3565b602082019050919050565b60006020820190508181036000830152611128816110ec565b905091905056fea2646970667358221220bb5646e1777269f4184f4c5ca35cb6b740a5fc1fb746aea7d26a24047e91d89b64736f6c63430008140033";

type LockReleaseProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockReleaseProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockReleaseProtocol__factory extends ContractFactory {
  constructor(...args: LockReleaseProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LockReleaseProtocol> {
    return super.deploy(overrides || {}) as Promise<LockReleaseProtocol>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LockReleaseProtocol {
    return super.attach(address) as LockReleaseProtocol;
  }
  override connect(signer: Signer): LockReleaseProtocol__factory {
    return super.connect(signer) as LockReleaseProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockReleaseProtocolInterface {
    return new utils.Interface(_abi) as LockReleaseProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockReleaseProtocol {
    return new Contract(address, _abi, signerOrProvider) as LockReleaseProtocol;
  }
}
