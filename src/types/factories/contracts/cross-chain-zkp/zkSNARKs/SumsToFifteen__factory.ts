/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SumsToFifteen,
  SumsToFifteenInterface,
} from "../../../../contracts/cross-chain-zkp/zkSNARKs/SumsToFifteen";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "success",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "a",
        type: "uint256[2]",
      },
      {
        name: "a_p",
        type: "uint256[2]",
      },
      {
        name: "b",
        type: "uint256[2][2]",
      },
      {
        name: "b_p",
        type: "uint256[2]",
      },
      {
        name: "c",
        type: "uint256[2]",
      },
      {
        name: "c_p",
        type: "uint256[2]",
      },
      {
        name: "h",
        type: "uint256[2]",
      },
      {
        name: "k",
        type: "uint256[2]",
      },
      {
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyFifteen",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "a",
        type: "uint256[2]",
      },
      {
        name: "a_p",
        type: "uint256[2]",
      },
      {
        name: "b",
        type: "uint256[2][2]",
      },
      {
        name: "b_p",
        type: "uint256[2]",
      },
      {
        name: "c",
        type: "uint256[2]",
      },
      {
        name: "c_p",
        type: "uint256[2]",
      },
      {
        name: "h",
        type: "uint256[2]",
      },
      {
        name: "k",
        type: "uint256[2]",
      },
      {
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyTx",
    outputs: [
      {
        name: "r",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "",
        type: "string",
      },
    ],
    name: "Verified",
    type: "event",
  },
] as const;

const _bytecode =
  "0x608060405260008060006101000a81548160ff02191690831515021790555034801561002a57600080fd5b50611b3c8061003a6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b93381b1461005c5780634a06460b1461008b578063fe01ff621461028d575b600080fd5b34801561006857600080fd5b506100716104a7565b604051808215151515815260200191505060405180910390f35b34801561009757600080fd5b5061028b600480360381019080806040019060028060200260405190810160405280929190826002602002808284378201915050505050919291929080604001906002806020026040519081016040528092919082600260200280828437820191505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561016057838260400201600280602002604051908101604052809291908260026020028082843782019150505050508152602001906001019061011e565bb9565b005b34801561029957600080fd5b5061048d600480360381019080806040019060028060200260405190810160405280929190826002602002808284378201915050505050919291929080604001906002806020026040519081016040528092919082600260200280828437820191505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610362578382604002016002806020026040519081016040528092919082600260200280828437820191505050505081526020019060010190610320565bb604051808215151515815260200191505060405180910390f35b6000809054906101000a900460ff1681565b6104ca898989898989898989610507565b6000806101000a81548160ff0219169083151502179055506000809054906101000a900460ff16156104fb576104fc565b5b505050505050505050565b600061051161191d565b6060600060408051908101604052808e600060028110151561052f57fe5b602002015181526020018e600160028110151561054857fe5b6020020151815250836000018190525060408051908101604052808d600060028110151561057257fe5b602002015181526020018d600160028110151561058b57fe5b60200201518152508360200181905250604080519081016040528060408051908101604052808e60006002811015156105c057fe5b602002015160006002811015156105d357fe5b602002015181526020018e60006002811015156105ec57fe5b602002015160016002811015156105ff57fe5b6020020151815250815260200160408051908101604052808e600160028110151561062657fe5b6020020151600060028110151561063957fe5b602002015181526020018e600160028110151561065257fe5b6020020151600160028110151561066557fe5b6020020151815250815250836040018190525060408051908101604052808b600060028110151561069257fe5b602002015181526020018b60016002811015156106ab57fe5b6020020151815250836060018190525060408051908101604052808a60006002811015156106d557fe5b602002015181526020018a60016002811015156106ee57fe5b60200201518152508360800181905250604080519081016040528089600060028110151561071857fe5b6020020151815260200189600160028110151561073157fe5b60200201518152508360a00181905250604080519081016040528088600060028110151561075b57fe5b6020020151815260200188600160028110151561077457fe5b60200201518152508360e00181905250604080519081016040528087600060028110151561079e57fe5b602002015181526020018760016002811015156107b757fe5b60200201518152508360c0018190525060026040519080825280602002602001820160405280156107f75781602001602082028038833980820191505090505b509150600090505b600281101561084457848160028110151561081657fe5b6020020151828281518110151561082957fe5b906020019060200201818152505080806001019150506107ff565b60006108508385610902565b14156108ed577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001807f5472616e73616374696f6e207375636365737366756c6c79207665726966696581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390a1600193506108f2565b600093505b5050509998505050505050505050565b600061090c611993565b610914611a03565b600061091e610b39565b92508260e0015151600187510114151561093757600080fd5b60408051908101604052806000815260200160008152509150600090505b85518110156109b5576109a6826109a18560e001516001850181518110151561097a57fe5b90602001906020020151898581518110151561099257fe5b9060200190602002015161117a565b611216565b91508080600101915050610955565b6109db828460e0015160008151811015156109cc57fe5b90602001906020020151611216565b9150610a04856000015184600001516109f788602001516112d3565b6109ff61136e565b611438565b1515610a135760019350610b30565b610a3a83602001518660400151610a2d88606001516112d3565b610a3561136e565b611438565b1515610a495760029350610b30565b610a7085608001518460400151610a638860a001516112d3565b610a6b61136e565b611438565b1515610a7f5760039350610b30565b610acb8560c001518460600151610aaf610aaa86610aa58b600001518c60800151611216565b611216565b6112d3565b8660a00151610ac188608001516112d3565b8a60400151611543565b1515610ada5760049350610b30565b610b1c610aeb838760000151611216565b8660400151610afd8860e001516112d3565b8660c00151610b0f8a608001516112d3565b610b1761136e565b611543565b1515610b2b5760059350610b30565b600093505b50505092915050565b610b41611993565b604080519081016040528060408051908101604052807f11cdfdd85c8506e01b1013980776315a6d861d5505fe3b2d70ca66646f08adea81526020017f1d831f34d31e8094f09b7fd8249f545073ef3f8d1038bf71248529a143fdebf3815250815260200160408051908101604052807f17ec9e42908c8624c32dcdb7b76c64acf53b6d4ee72444d3a7c1fe8e00f5d7fa81526020017f2fbea9b20d6443c407819f819e0ade7a07c030e9f62894dbf92dad1a55a1614d815250815250816000018190525060408051908101604052807f10cf27740851709989f00203df5525ecc3577bf044eadef05037453b95c35f4081526020017f224686b18747c89d9bef1039e945efb497ee7ff669011c14c6ca3a77785783248152508160200181905250604080519081016040528060408051908101604052807f0d02131a4f3d1f61e40b25666540d93b7db79f76fa35f0f9d7a75ac2a4e2385681526020017f04fb6e315e432313cdb9fbce5660354dd6fb56432b7efa72f8bf9c38cd750ef1815250815260200160408051908101604052807f1ae71edad4c83cda00b5a545e3f530f15fff83863d2db70b47f1a640c3c4f15481526020017f224004ca2456ac33a7f1c9594b9b30f31370f432907ac4b5e72664b74254b9a78152508152508160400181905250604080519081016040528060408051908101604052807f16375cb516444080a3d506e3ccda9f36a9b533d32732600125fe23b95d42471981526020017f14b036bf21e18810e6b3549f868b9897c1bc0a5a50b17a3b2a0db67215795254815250815260200160408051908101604052807f261fbb7c90d8f47bb64b866d8be09b66d5b074f1ca7329310473dc7eaf167eb381526020017f2c05775885afcb722cd4d7c832a6d00b08d108697b044d2ac05ab595dfcf6f1a815250815250816060018190525060408051908101604052807f1b86641088fe2985bd3c4b1195e7792ae61314561a20bd28622a3b10716d5b7981526020017f0272f35e571a9c28f54c969a0e093f3e2d92962857f67bdf6122e98b143891538152508160800181905250604080519081016040528060408051908101604052807f0961ab4f5fd50c437b4aace5efda67eb910235662a3e1d4f4c07073361ad8c1481526020017f16585be5bc76e6fb26750d0361efc293ff7ce6fe63d40efa936dcda52e89d88a815250815260200160408051908101604052807f12d8cc318710026ebdd483d4a8e26951e7728682195488aa8231d33ce55a721181526020017f1babe275048dbabbda7200de77538ba582abc0857030ddeef52ea64c31406d8a8152508152508160a00181905250604080519081016040528060408051908101604052807f1532128acd3ae189f8cac212620f6e93a47da24350534a5383804e18b7ec449781526020017f2014cf88774f460a6f003dd1a4d6e40db890de1ca4694219ea1245041f73be03815250815260200160408051908101604052807f0d368d63297b3ee0e42219e1b938555a3d7d2249937bc683f19504380359058381526020017f1278c675d5eecfde121e1d95ac0b1f8c8a6fa920f176f016893acebecdf478e58152508152508160c00181905250600360405190808252806020026020018201604052801561100f57816020015b610ffc611a1d565b815260200190600190039081610ff45790505b508160e0018190525060408051908101604052807f10682c32b1cbdd9d48d08ba6397853ae73ee82dfc2441dd345922460cc78d50881526020017f2fc117c0cdb41a93bdf87416122359c6d065f689c02f08d9d86924e8d0328d778152508160e00151600081518110151561108057fe5b9060200190602002018190525060408051908101604052807f2188a0de08297f728150224fe8a0796a17d7499d5f774b9b765b324cfbbb2ea981526020017f2ceb95f152b45bd36d8662e0d211d1b3fc912fe6935ec400d7e2fb5d7c27e3da8152508160e0015160018151811015156110f557fe5b9060200190602002018190525060408051908101604052807f13c07e1ab1bd0dc50a121c54b1774d758c9eebb83673f728678a92528253832c81526020017f0e38e2d5cfc5c4e6b4f63e5e4e1496b86fd8b627c78af3e130cda3ad5c6f328d8152508160e00151600281518110151561116a57fe5b9060200190602002018190525090565b611182611a03565b61118a611a37565b600084600001518260006003811015156111a057fe5b60200201818152505084602001518260016003811015156111bd57fe5b602002018181525050838260026003811015156111d657fe5b602002018181525050606083608084600060076107d05a03f1905080600081146111ff57611201565bfe5b5080151561120e57600080fd5b505092915050565b61121e611a03565b611226611a5a565b6000846000015182600060048110151561123c57fe5b602002018181525050846020015182600160048110151561125957fe5b602002018181525050836000015182600260048110151561127657fe5b602002018181525050836020015182600360048110151561129357fe5b60200201818152505060608360c084600060066107d05a03f1905080600081146112bc576112be565bfe5b508015156112cb57600080fd5b505092915050565b6112db611a03565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015611318575060008360200151145b1561133b5760408051908101604052806000815260200160008152509150611368565b60408051908101604052808460000151815260200182856020015181151561135f57fe5b06830381525091505b50919050565b611376611a7d565b604080519081016040528060408051908101604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160408051908101604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa815250815250905090565b6000606080600260405190808252806020026020018201604052801561147857816020015b611465611a1d565b81526020019060019003908161145d5790505b50915060026040519080825280602002602001820160405280156114b657816020015b6114a3611aa4565b81526020019060019003908161149b5790505b509050868260008151811015156114c957fe5b90602001906020020181905250848260018151811015156114e657fe5b906020019060200201819052508581600081518110151561150357fe5b906020019060200201819052508381600181518110151561152057fe5b90602001906020020181905250611537828261168a565b92505050949350505050565b6000606080600360405190808252806020026020018201604052801561158357816020015b611570611a1d565b8152602001906001900390816115685790505b50915060036040519080825280602002602001820160405280156115c157816020015b6115ae611aa4565b8152602001906001900390816115a65790505b509050888260008151811015156115d457fe5b90602001906020020181905250868260018151811015156115f157fe5b906020019060200201819052508482600281518110151561160e57fe5b906020019060200201819052508781600081518110151561162b57fe5b906020019060200201819052508581600181518110151561164857fe5b906020019060200201819052508381600281518110151561166557fe5b9060200190602002018190525061167c828261168a565b925050509695505050505050565b60008060006060600061169b611acb565b6000875189511415156116ad57600080fd5b88519550600686029450846040519080825280602002602001820160405280156116e65781602001602082028038833980820191505090505b509350600092505b858310156118c357888381518110151561170457fe5b9060200190602002015160000151846000600686020181518110151561172657fe5b9060200190602002018181525050888381518110151561174257fe5b9060200190602002015160200151846001600686020181518110151561176457fe5b9060200190602002018181525050878381518110151561178057fe5b9060200190602002015160000151600060028110151561179c57fe5b602002015184600260068602018151811015156117b557fe5b906020019060200201818152505087838151811015156117d157fe5b906020019060200201516000015160016002811015156117ed57fe5b6020020151846003600686020181518110151561180657fe5b9060200190602002018181525050878381518110151561182257fe5b9060200190602002015160200151600060028110151561183e57fe5b6020020151846004600686020181518110151561185757fe5b9060200190602002018181525050878381518110151561187357fe5b9060200190602002015160200151600160028110151561188f57fe5b602002015184600560068602018151811015156118a857fe5b906020019060200201818152505082806001019350506116ee565b6020826020870260208701600060086107d05a03f1905080600081146118e8576118ea565bfe5b508015156118f757600080fd5b600082600060018110151561190857fe5b60200201511415965050505050505092915050565b61024060405190810160405280611932611a1d565b815260200161193f611a1d565b815260200161194c611aa4565b8152602001611959611a1d565b8152602001611966611a1d565b8152602001611973611a1d565b8152602001611980611a1d565b815260200161198d611a1d565b81525090565b610320604051908101604052806119a8611aa4565b81526020016119b5611a1d565b81526020016119c2611aa4565b81526020016119cf611aa4565b81526020016119dc611a1d565b81526020016119e9611aa4565b81526020016119f6611aa4565b8152602001606081525090565b604080519081016040528060008152602001600081525090565b604080519081016040528060008152602001600081525090565b606060405190810160405280600390602082028038833980820191505090505090565b608060405190810160405280600490602082028038833980820191505090505090565b608060405190810160405280611a91611aee565b8152602001611a9e611aee565b81525090565b608060405190810160405280611ab8611aee565b8152602001611ac5611aee565b81525090565b602060405190810160405280600190602082028038833980820191505090505090565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a723058202b7524da3423527c60bb460643ebe1c0f9cad996e2a4f73eb84d3a1a9853d9350029";

type SumsToFifteenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SumsToFifteenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SumsToFifteen__factory extends ContractFactory {
  constructor(...args: SumsToFifteenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SumsToFifteen> {
    return super.deploy(overrides || {}) as Promise<SumsToFifteen>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SumsToFifteen {
    return super.attach(address) as SumsToFifteen;
  }
  override connect(signer: Signer): SumsToFifteen__factory {
    return super.connect(signer) as SumsToFifteen__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SumsToFifteenInterface {
    return new utils.Interface(_abi) as SumsToFifteenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SumsToFifteen {
    return new Contract(address, _abi, signerOrProvider) as SumsToFifteen;
  }
}
