/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../../contracts/cross-chain-zkp/zkSNARKs/Verifier";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "a",
        type: "uint256[2]",
      },
      {
        name: "a_p",
        type: "uint256[2]",
      },
      {
        name: "b",
        type: "uint256[2][2]",
      },
      {
        name: "b_p",
        type: "uint256[2]",
      },
      {
        name: "c",
        type: "uint256[2]",
      },
      {
        name: "c_p",
        type: "uint256[2]",
      },
      {
        name: "h",
        type: "uint256[2]",
      },
      {
        name: "k",
        type: "uint256[2]",
      },
      {
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyTx",
    outputs: [
      {
        name: "r",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "",
        type: "string",
      },
    ],
    name: "Verified",
    type: "event",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611895806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063fe01ff6214610046575b600080fd5b34801561005257600080fd5b50610246600480360381019080806040019060028060200260405190810160405280929190826002602002808284378201915050505050919291929080604001906002806020026040519081016040528092919082600260200280828437820191505050505091929192908060800190600280602002604051908101604052809291906000905b8282101561011b5783826040020160028060200260405190810160405280929190826002602002808284378201915050505050815260200190600101906100d9565bb604051808215151515815260200191505060405180910390f35b600061026a611676565b6060600060408051908101604052808e600060028110151561028857fe5b602002015181526020018e60016002811015156102a157fe5b6020020151815250836000018190525060408051908101604052808d60006002811015156102cb57fe5b602002015181526020018d60016002811015156102e457fe5b60200201518152508360200181905250604080519081016040528060408051908101604052808e600060028110151561031957fe5b6020020151600060028110151561032c57fe5b602002015181526020018e600060028110151561034557fe5b6020020151600160028110151561035857fe5b6020020151815250815260200160408051908101604052808e600160028110151561037f57fe5b6020020151600060028110151561039257fe5b602002015181526020018e60016002811015156103ab57fe5b602002015160016002811015156103be57fe5b6020020151815250815250836040018190525060408051908101604052808b60006002811015156103eb57fe5b602002015181526020018b600160028110151561040457fe5b6020020151815250836060018190525060408051908101604052808a600060028110151561042e57fe5b602002015181526020018a600160028110151561044757fe5b60200201518152508360800181905250604080519081016040528089600060028110151561047157fe5b6020020151815260200189600160028110151561048a57fe5b60200201518152508360a0018190525060408051908101604052808860006002811015156104b457fe5b602002015181526020018860016002811015156104cd57fe5b60200201518152508360e0018190525060408051908101604052808760006002811015156104f757fe5b6020020151815260200187600160028110151561051057fe5b60200201518152508360c0018190525060026040519080825280602002602001820160405280156105505781602001602082028038833980820191505090505b509150600090505b600281101561059d57848160028110151561056f57fe5b6020020151828281518110151561058257fe5b90602001906020020181815250508080600101915050610558565b60006105a9838561065b565b1415610646577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001807f5472616e73616374696f6e207375636365737366756c6c79207665726966696581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390a16001935061064b565b600093505b5050509998505050505050505050565b60006106656116ec565b61066d61175c565b6000610677610892565b92508260e0015151600187510114151561069057600080fd5b60408051908101604052806000815260200160008152509150600090505b855181101561070e576106ff826106fa8560e00151600185018151811015156106d357fe5b9060200190602002015189858151811015156106eb57fe5b90602001906020020151610ed3565b610f6f565b915080806001019150506106ae565b610734828460e00151600081518110151561072557fe5b90602001906020020151610f6f565b915061075d85600001518460000151610750886020015161102c565b6107586110c7565b611191565b151561076c5760019350610889565b61079383602001518660400151610786886060015161102c565b61078e6110c7565b611191565b15156107a25760029350610889565b6107c9856080015184604001516107bc8860a0015161102c565b6107c46110c7565b611191565b15156107d85760039350610889565b6108248560c001518460600151610808610803866107fe8b600001518c60800151610f6f565b610f6f565b61102c565b8660a0015161081a886080015161102c565b8a6040015161129c565b15156108335760049350610889565b610875610844838760000151610f6f565b86604001516108568860e0015161102c565b8660c001516108688a6080015161102c565b6108706110c7565b61129c565b15156108845760059350610889565b600093505b50505092915050565b61089a6116ec565b604080519081016040528060408051908101604052807f11cdfdd85c8506e01b1013980776315a6d861d5505fe3b2d70ca66646f08adea81526020017f1d831f34d31e8094f09b7fd8249f545073ef3f8d1038bf71248529a143fdebf3815250815260200160408051908101604052807f17ec9e42908c8624c32dcdb7b76c64acf53b6d4ee72444d3a7c1fe8e00f5d7fa81526020017f2fbea9b20d6443c407819f819e0ade7a07c030e9f62894dbf92dad1a55a1614d815250815250816000018190525060408051908101604052807f10cf27740851709989f00203df5525ecc3577bf044eadef05037453b95c35f4081526020017f224686b18747c89d9bef1039e945efb497ee7ff669011c14c6ca3a77785783248152508160200181905250604080519081016040528060408051908101604052807f0d02131a4f3d1f61e40b25666540d93b7db79f76fa35f0f9d7a75ac2a4e2385681526020017f04fb6e315e432313cdb9fbce5660354dd6fb56432b7efa72f8bf9c38cd750ef1815250815260200160408051908101604052807f1ae71edad4c83cda00b5a545e3f530f15fff83863d2db70b47f1a640c3c4f15481526020017f224004ca2456ac33a7f1c9594b9b30f31370f432907ac4b5e72664b74254b9a78152508152508160400181905250604080519081016040528060408051908101604052807f16375cb516444080a3d506e3ccda9f36a9b533d32732600125fe23b95d42471981526020017f14b036bf21e18810e6b3549f868b9897c1bc0a5a50b17a3b2a0db67215795254815250815260200160408051908101604052807f261fbb7c90d8f47bb64b866d8be09b66d5b074f1ca7329310473dc7eaf167eb381526020017f2c05775885afcb722cd4d7c832a6d00b08d108697b044d2ac05ab595dfcf6f1a815250815250816060018190525060408051908101604052807f1b86641088fe2985bd3c4b1195e7792ae61314561a20bd28622a3b10716d5b7981526020017f0272f35e571a9c28f54c969a0e093f3e2d92962857f67bdf6122e98b143891538152508160800181905250604080519081016040528060408051908101604052807f0961ab4f5fd50c437b4aace5efda67eb910235662a3e1d4f4c07073361ad8c1481526020017f16585be5bc76e6fb26750d0361efc293ff7ce6fe63d40efa936dcda52e89d88a815250815260200160408051908101604052807f12d8cc318710026ebdd483d4a8e26951e7728682195488aa8231d33ce55a721181526020017f1babe275048dbabbda7200de77538ba582abc0857030ddeef52ea64c31406d8a8152508152508160a00181905250604080519081016040528060408051908101604052807f1532128acd3ae189f8cac212620f6e93a47da24350534a5383804e18b7ec449781526020017f2014cf88774f460a6f003dd1a4d6e40db890de1ca4694219ea1245041f73be03815250815260200160408051908101604052807f0d368d63297b3ee0e42219e1b938555a3d7d2249937bc683f19504380359058381526020017f1278c675d5eecfde121e1d95ac0b1f8c8a6fa920f176f016893acebecdf478e58152508152508160c001819052506003604051908082528060200260200182016040528015610d6857816020015b610d55611776565b815260200190600190039081610d4d5790505b508160e0018190525060408051908101604052807f10682c32b1cbdd9d48d08ba6397853ae73ee82dfc2441dd345922460cc78d50881526020017f2fc117c0cdb41a93bdf87416122359c6d065f689c02f08d9d86924e8d0328d778152508160e001516000815181101515610dd957fe5b9060200190602002018190525060408051908101604052807f2188a0de08297f728150224fe8a0796a17d7499d5f774b9b765b324cfbbb2ea981526020017f2ceb95f152b45bd36d8662e0d211d1b3fc912fe6935ec400d7e2fb5d7c27e3da8152508160e001516001815181101515610e4e57fe5b9060200190602002018190525060408051908101604052807f13c07e1ab1bd0dc50a121c54b1774d758c9eebb83673f728678a92528253832c81526020017f0e38e2d5cfc5c4e6b4f63e5e4e1496b86fd8b627c78af3e130cda3ad5c6f328d8152508160e001516002815181101515610ec357fe5b9060200190602002018190525090565b610edb61175c565b610ee3611790565b60008460000151826000600381101515610ef957fe5b6020020181815250508460200151826001600381101515610f1657fe5b60200201818152505083826002600381101515610f2f57fe5b602002018181525050606083608084600060076107d05a03f190508060008114610f5857610f5a565bfe5b50801515610f6757600080fd5b505092915050565b610f7761175c565b610f7f6117b3565b60008460000151826000600481101515610f9557fe5b6020020181815250508460200151826001600481101515610fb257fe5b6020020181815250508360000151826002600481101515610fcf57fe5b6020020181815250508360200151826003600481101515610fec57fe5b60200201818152505060608360c084600060066107d05a03f19050806000811461101557611017565bfe5b5080151561102457600080fd5b505092915050565b61103461175c565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015611071575060008360200151145b1561109457604080519081016040528060008152602001600081525091506110c1565b6040805190810160405280846000015181526020018285602001518115156110b857fe5b06830381525091505b50919050565b6110cf6117d6565b604080519081016040528060408051908101604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160408051908101604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa815250815250905090565b600060608060026040519080825280602002602001820160405280156111d157816020015b6111be611776565b8152602001906001900390816111b65790505b509150600260405190808252806020026020018201604052801561120f57816020015b6111fc6117fd565b8152602001906001900390816111f45790505b5090508682600081518110151561122257fe5b906020019060200201819052508482600181518110151561123f57fe5b906020019060200201819052508581600081518110151561125c57fe5b906020019060200201819052508381600181518110151561127957fe5b9060200190602002018190525061129082826113e3565b92505050949350505050565b600060608060036040519080825280602002602001820160405280156112dc57816020015b6112c9611776565b8152602001906001900390816112c15790505b509150600360405190808252806020026020018201604052801561131a57816020015b6113076117fd565b8152602001906001900390816112ff5790505b5090508882600081518110151561132d57fe5b906020019060200201819052508682600181518110151561134a57fe5b906020019060200201819052508482600281518110151561136757fe5b906020019060200201819052508781600081518110151561138457fe5b90602001906020020181905250858160018151811015156113a157fe5b90602001906020020181905250838160028151811015156113be57fe5b906020019060200201819052506113d582826113e3565b925050509695505050505050565b6000806000606060006113f4611824565b60008751895114151561140657600080fd5b885195506006860294508460405190808252806020026020018201604052801561143f5781602001602082028038833980820191505090505b509350600092505b8583101561161c57888381518110151561145d57fe5b9060200190602002015160000151846000600686020181518110151561147f57fe5b9060200190602002018181525050888381518110151561149b57fe5b906020019060200201516020015184600160068602018151811015156114bd57fe5b906020019060200201818152505087838151811015156114d957fe5b906020019060200201516000015160006002811015156114f557fe5b6020020151846002600686020181518110151561150e57fe5b9060200190602002018181525050878381518110151561152a57fe5b9060200190602002015160000151600160028110151561154657fe5b6020020151846003600686020181518110151561155f57fe5b9060200190602002018181525050878381518110151561157b57fe5b9060200190602002015160200151600060028110151561159757fe5b602002015184600460068602018151811015156115b057fe5b906020019060200201818152505087838151811015156115cc57fe5b906020019060200201516020015160016002811015156115e857fe5b6020020151846005600686020181518110151561160157fe5b90602001906020020181815250508280600101935050611447565b6020826020870260208701600060086107d05a03f19050806000811461164157611643565bfe5b5080151561165057600080fd5b600082600060018110151561166157fe5b60200201511415965050505050505092915050565b6102406040519081016040528061168b611776565b8152602001611698611776565b81526020016116a56117fd565b81526020016116b2611776565b81526020016116bf611776565b81526020016116cc611776565b81526020016116d9611776565b81526020016116e6611776565b81525090565b610320604051908101604052806117016117fd565b815260200161170e611776565b815260200161171b6117fd565b81526020016117286117fd565b8152602001611735611776565b81526020016117426117fd565b815260200161174f6117fd565b8152602001606081525090565b604080519081016040528060008152602001600081525090565b604080519081016040528060008152602001600081525090565b606060405190810160405280600390602082028038833980820191505090505090565b608060405190810160405280600490602082028038833980820191505090505090565b6080604051908101604052806117ea611847565b81526020016117f7611847565b81525090565b608060405190810160405280611811611847565b815260200161181e611847565b81525090565b602060405190810160405280600190602082028038833980820191505090505090565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a7230582005aa69e85189be47e8224363b015c64a15a2ca87607c1534dfe7f38e23f8876c0029";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
