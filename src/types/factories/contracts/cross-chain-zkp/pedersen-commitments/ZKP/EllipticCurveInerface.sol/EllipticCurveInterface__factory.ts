/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  EllipticCurveInterface,
  EllipticCurveInterfaceInterface,
} from "../../../../../../contracts/cross-chain-zkp/pedersen-commitments/ZKP/EllipticCurveInerface.sol/EllipticCurveInterface";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "gx",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "x",
        type: "uint256",
      },
      {
        name: "pp",
        type: "uint256",
      },
    ],
    name: "invMod",
    outputs: [
      {
        name: "q",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gy",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_x1",
        type: "uint256",
      },
      {
        name: "_y1",
        type: "uint256",
      },
      {
        name: "_x2",
        type: "uint256",
      },
      {
        name: "_y2",
        type: "uint256",
      },
    ],
    name: "eSub",
    outputs: [
      {
        name: "_x3",
        type: "uint256",
      },
      {
        name: "_y3",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_z",
        type: "uint256",
      },
      {
        name: "_x1",
        type: "uint256",
      },
      {
        name: "_y1",
        type: "uint256",
      },
    ],
    name: "eMul",
    outputs: [
      {
        name: "_x2",
        type: "uint256",
      },
      {
        name: "_y2",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "nn",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_x1",
        type: "uint256",
      },
      {
        name: "_y1",
        type: "uint256",
      },
      {
        name: "_x2",
        type: "uint256",
      },
      {
        name: "_y2",
        type: "uint256",
      },
    ],
    name: "eAdd",
    outputs: [
      {
        name: "_x3",
        type: "uint256",
      },
      {
        name: "_y3",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pp",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f6000557ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641416001557f79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f817986002557f483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b86003553480156100a057600080fd5b50610eb4806100b06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806366da27af1161005b57806366da27af1461017c57806372a4c30f146101d95780638e833f0d146101f757806391327ec61461025e57610088565b806306c91ce31461008d5780631b54f824146100ab5780632d58c9a2146100f757806330f3234914610115575b600080fd5b61009561027c565b6040518082815260200191505060405180910390f35b6100e1600480360360408110156100c157600080fd5b810190808035906020019092919080359060200190929190505050610282565b6040518082815260200191505060405180910390f35b6100ff610377565b6040518082815260200191505060405180910390f35b61015f6004803603608081101561012b57600080fd5b810190808035906020019092919080359060200190929190803590602001909291908035906020019092919050505061037d565b604051808381526020018281526020019250505060405180910390f35b6101bc6004803603606081101561019257600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506103a1565b604051808381526020018281526020019250505060405180910390f35b6101e16103c3565b6040518082815260200191505060405180910390f35b6102416004803603608081101561020d57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506103c9565b604051808381526020018281526020019250505060405180910390f35b6102666103ed565b6040518082815260200191505060405180910390f35b60025481565b60008083148061029157508183145b8061029c5750600082145b1561030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c6964206e756d62657200000000000000000000000000000000000081525060200191505060405180910390fd5b600090506000600190506000839050600085905060005b6000821461036d5781838161033757fe5b04905083868061034357fe5b878061034b57fe5b8684098803870880955081965050508182820284038093508194505050610326565b5050505092915050565b60035481565b60008061039086868686600080546103f3565b809250819350505094509492505050565b6000806103b38585856000805461042b565b8092508193505050935093915050565b60015481565b6000806103dc8686868660008054610469565b809250819350505094509492505050565b60005481565b6000806000806104048888876104e2565b915091506104168a8a84848a8a610469565b80945081955050505050965096945050505050565b60008060008060006104428a8a8a60018b8b610502565b9250925092506104548383838961068e565b80955081965050505050509550959350505050565b600080600080905060008090506000809050888b14156104a2576104918b8b60018a8a610754565b8093508194508295505050506104c0565b6104b38b8b60018c8c60018c610912565b8093508194508295505050505b6104cc8383838961068e565b8095508196505050505050965096945050505050565b6000808483858503816104f157fe5b068092508193505050935093915050565b600080600080899050610513610e3b565b898160006003811061052157fe5b602002018181525050888160016003811061053857fe5b602002018181525050878160026003811061054f57fe5b60200201818152505060009450600093506001925060008b14156105885760008060018292508191508090509450945094505050610682565b5b6000821461067f57600060018316146105eb576105de858585846000600381106105af57fe5b6020020151856001600381106105c157fe5b6020020151866002600381106105d357fe5b60200201518c610912565b8095508196508297505050505b600282816105f557fe5b0491506106388160006003811061060857fe5b60200201518260016003811061061a57fe5b60200201518360026003811061062c57fe5b60200201518a8a610754565b8360006003811061064557fe5b602002018460016003811061065657fe5b602002018560026003811061066757fe5b60200201838152508381525083815250505050610589565b50505b96509650969350505050565b6000806000841415610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f496e76616c6964207a000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60006107148585610282565b90506000848061072057fe5b8283099050848061072d57fe5b8189099350848061073a57fe5b858061074257fe5b82840988099250505094509492505050565b60008060008086141561076f57878787925092509250610907565b610777610e3b565b848061077f57fe5b898a098160006003811061078f57fe5b60200201818152505084806107a057fe5b888909816001600381106107b057fe5b60200201818152505084806107c157fe5b878809816002600381106107d157fe5b602002018181525050600085806107e457fe5b86806107ec57fe5b836001600381106107f957fe5b60200201518c0960040990506000868061080f57fe5b878061081757fe5b888061081f57fe5b8560026003811061082c57fe5b60200201518660026003811061083e57fe5b6020020151098a09888061084e57fe5b8560006003811061085b57fe5b60200201516003090890506000878061087057fe5b888061087857fe5b8485088903898061088557fe5b848509089050809650878061089657fe5b888061089e57fe5b89806108a657fe5b866001600381106108b357fe5b6020020151876001600381106108c557fe5b602002015109600809890389806108d857fe5b8a806108e057fe5b8a8c038708850908955087806108f257fe5b88806108fa57fe5b8b8d096002099450505050505b955095509592505050565b6000806000808a1480156109265750600089145b1561093957868686925092509250610e2e565b6000871480156109495750600086145b1561095c57898989925092509250610e2e565b610964610e5d565b848061096c57fe5b898a098160006004811061097c57fe5b602002018181525050848061098d57fe5b8160006004811061099a57fe5b60200201518a09816001600481106109ae57fe5b60200201818152505084806109bf57fe5b868709816002600481106109cf57fe5b60200201818152505084806109e057fe5b816002600481106109ed57fe5b6020020151870981600360048110610a0157fe5b60200201818152505060405180608001604052808680610a1d57fe5b83600260048110610a2a57fe5b60200201518e0981526020018680610a3e57fe5b83600360048110610a4b57fe5b60200201518d0981526020018680610a5f57fe5b83600060048110610a6c57fe5b60200201518b0981526020018680610a8057fe5b83600160048110610a8d57fe5b60200201518a09815250905080600260048110610aa657fe5b602002015181600060048110610ab857fe5b60200201511415610bc85780600360048110610ad057fe5b602002015181600160048110610ae257fe5b602002015114610b5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f57726f6e6720646174610000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f55736520646f75626c6520696e7374656164000000000000000000000000000081525060200191505060405180910390fd5b610bd0610e5d565b8580610bd857fe5b82600060048110610be557fe5b6020020151870383600260048110610bf957fe5b60200201510881600060048110610c0c57fe5b6020020181815250508580610c1d57fe5b82600160048110610c2a57fe5b6020020151870383600360048110610c3e57fe5b60200201510881600160048110610c5157fe5b6020020181815250508580610c6257fe5b81600060048110610c6f57fe5b602002015182600060048110610c8157fe5b60200201510981600260048110610c9457fe5b6020020181815250508580610ca557fe5b81600060048110610cb257fe5b602002015182600260048110610cc457fe5b60200201510981600360048110610cd757fe5b6020020181815250508580610ce857fe5b81600360048110610cf557fe5b602002015187038780610d0457fe5b83600160048110610d1157fe5b602002015184600160048110610d2357fe5b6020020151090894508580610d3457fe5b8680610d3c57fe5b8780610d4457fe5b83600260048110610d5157fe5b602002015185600060048110610d6357fe5b6020020151096002098703860894508580610d7a57fe5b8680610d8257fe5b8688038880610d8d57fe5b84600260048110610d9a57fe5b602002015186600060048110610dac57fe5b6020020151090882600160048110610dc057fe5b60200201510993508580610dd057fe5b8680610dd857fe5b82600360048110610de557fe5b602002015184600160048110610df757fe5b6020020151098703850893508580610e0b57fe5b8680610e1357fe5b888c0982600060048110610e2357fe5b602002015109925050505b9750975097945050505050565b6040518060600160405280600390602082028038833980820191505090505090565b604051806080016040528060049060208202803883398082019150509050509056fea265627a7a72305820c38574161c113369aec0b91f858dce79b709845248efe3b0094ce4963036977964736f6c634300050a0032";

type EllipticCurveInterfaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EllipticCurveInterfaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EllipticCurveInterface__factory extends ContractFactory {
  constructor(...args: EllipticCurveInterfaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EllipticCurveInterface> {
    return super.deploy(overrides || {}) as Promise<EllipticCurveInterface>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EllipticCurveInterface {
    return super.attach(address) as EllipticCurveInterface;
  }
  override connect(signer: Signer): EllipticCurveInterface__factory {
    return super.connect(signer) as EllipticCurveInterface__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EllipticCurveInterfaceInterface {
    return new utils.Interface(_abi) as EllipticCurveInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EllipticCurveInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EllipticCurveInterface;
  }
}
