/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ProxyBidder,
  ProxyBidderInterface,
} from "../../../../contracts/cross-chain-zkp/VickreyAuction.sol/ProxyBidder";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "nonce",
        type: "bytes32",
      },
      {
        name: "bidValue",
        type: "uint256",
      },
    ],
    name: "revealBid",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "nonce",
        type: "bytes32",
      },
      {
        name: "bidValue",
        type: "uint256",
      },
      {
        name: "depositValue",
        type: "uint256",
      },
    ],
    name: "commitBid",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "auction",
        type: "address",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "constructor",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x608060405260405160208061044b83398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103d5806100766000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636203b72a1461004e578063db871d4514610089575b005b34801561005a57600080fd5b506100876004803603810190808035600019169060200190929190803590602001909291905050506100ce565b005b34801561009557600080fd5b506100cc600480360381019080803560001916906020019092919080359060200190929190803590602001909291905050506101ca565b005b3073ffffffffffffffffffffffffffffffffffffffff163181111515156100f157fe5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663acc9138e82846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600019166000191681526020019150506020604051808303818588803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b50505050506040513d60208110156101b457600080fd5b8101908080519060200190929190505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631828401111515156101f157fe5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab4adc5085856040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180836000191660001916815260200182815260200192505050602060405180830381600087803b15801561029157600080fd5b505af11580156102a5573d6000803e3d6000fd5b505050506040513d60208110156102bb57600080fd5b810190808051906020019092919050505090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166386a2cc2783836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600019166000191681526020019150506020604051808303818588803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b50505050506040513d602081101561039157600080fd5b810190808051906020019092919050505050505050505600a165627a7a72305820a588743b38f471e0f507a7a12961bc31eb9ff3aa606b2746c82ef86fe3e7c1b70029";

type ProxyBidderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyBidderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyBidder__factory extends ContractFactory {
  constructor(...args: ProxyBidderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    auction: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyBidder> {
    return super.deploy(auction, overrides || {}) as Promise<ProxyBidder>;
  }
  override getDeployTransaction(
    auction: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(auction, overrides || {});
  }
  override attach(address: string): ProxyBidder {
    return super.attach(address) as ProxyBidder;
  }
  override connect(signer: Signer): ProxyBidder__factory {
    return super.connect(signer) as ProxyBidder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyBidderInterface {
    return new utils.Interface(_abi) as ProxyBidderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyBidder {
    return new Contract(address, _abi, signerOrProvider) as ProxyBidder;
  }
}
