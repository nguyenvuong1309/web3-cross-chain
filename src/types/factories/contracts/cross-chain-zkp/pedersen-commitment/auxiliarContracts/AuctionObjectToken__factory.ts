/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AuctionObjectToken,
  AuctionObjectTokenInterface,
} from "../../../../../contracts/cross-chain-zkp/pedersen-commitment/auxiliarContracts/AuctionObjectToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadata_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approve",
        type: "address",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isCallerApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerOfToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011c6380380620011c6833981810160405281019062000037919062000237565b816000908162000048919062000507565b5080600190816200005a919062000507565b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005ee565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200010d82620000c2565b810181811067ffffffffffffffff821117156200012f576200012e620000d3565b5b80604052505050565b600062000144620000a4565b905062000152828262000102565b919050565b600067ffffffffffffffff821115620001755762000174620000d3565b5b6200018082620000c2565b9050602081019050919050565b60005b83811015620001ad57808201518184015260208101905062000190565b60008484015250505050565b6000620001d0620001ca8462000157565b62000138565b905082815260208101848484011115620001ef57620001ee620000bd565b5b620001fc8482856200018d565b509392505050565b600082601f8301126200021c576200021b620000b8565b5b81516200022e848260208601620001b9565b91505092915050565b60008060408385031215620002515762000250620000ae565b5b600083015167ffffffffffffffff811115620002725762000271620000b3565b5b620002808582860162000204565b925050602083015167ffffffffffffffff811115620002a457620002a3620000b3565b5b620002b28582860162000204565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200030f57607f821691505b602082108103620003255762000324620002c7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200038f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000350565b6200039b868362000350565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003e8620003e2620003dc84620003b3565b620003bd565b620003b3565b9050919050565b6000819050919050565b6200040483620003c7565b6200041c6200041382620003ef565b8484546200035d565b825550505050565b600090565b6200043362000424565b62000440818484620003f9565b505050565b5b8181101562000468576200045c60008262000429565b60018101905062000446565b5050565b601f821115620004b75762000481816200032b565b6200048c8462000340565b810160208510156200049c578190505b620004b4620004ab8562000340565b83018262000445565b50505b505050565b600082821c905092915050565b6000620004dc60001984600802620004bc565b1980831691505092915050565b6000620004f78383620004c9565b9150826002028217905092915050565b6200051282620002bc565b67ffffffffffffffff8111156200052e576200052d620000d3565b5b6200053a8254620002f6565b620005478282856200046c565b600060209050601f8311600181146200057f57600084156200056a578287015190505b620005768582620004e9565b865550620005e6565b601f1984166200058f866200032b565b60005b82811015620005b95784890151825560018201915060208501945060208101905062000592565b86831015620005d95784890151620005d5601f891682620004c9565b8355505b6001600288020188555050505b505050505050565b610bc880620005fe6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde03146100675780631a69523014610085578063392f37e9146100a15780633ebbcc4e146100bf578063c7859643146100dd578063daea85c5146100fb575b600080fd5b61006f610117565b60405161007c91906107b8565b60405180910390f35b61009f600480360381019061009a919061083d565b6101a9565b005b6100a9610220565b6040516100b691906107b8565b60405180910390f35b6100c76102b2565b6040516100d49190610885565b60405180910390f35b6100e56102c2565b6040516100f291906108af565b60405180910390f35b6101156004803603810190610110919061083d565b6102ec565b005b606060008054610126906108f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610152906108f9565b801561019f5780601f106101745761010080835404028352916020019161019f565b820191906000526020600020905b81548152906001019060200180831161018257829003601f168201915b5050505050905090565b6101b233610418565b6101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610976565b60405180910390fd5b61021d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826104ca565b50565b60606001805461022f906108f9565b80601f016020809104026020016040519081016040528092919081815260200182805461025b906108f9565b80156102a85780601f1061027d576101008083540402835291602001916102a8565b820191906000526020600020905b81548152906001019060200180831161028b57829003601f168201915b5050505050905090565b60006102bd33610418565b905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390610a08565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610a74565b60405180910390fd5b61041581610668565b50565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806104c35750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190610ae0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c090610b72565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4853ae1b4d437c4255ac16cd3ceda3465975023f27cb141584cd9d44440fed8260405160405180910390a35050565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff37f546c25e850257cc0c94f92bec94a17e2f0e884ddda268a25d8144b70eb6a60405160405180910390a350565b600081519050919050565b600082825260208201905092915050565b60005b83811015610762578082015181840152602081019050610747565b60008484015250505050565b6000601f19601f8301169050919050565b600061078a82610728565b6107948185610733565b93506107a4818560208601610744565b6107ad8161076e565b840191505092915050565b600060208201905081810360008301526107d2818461077f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061080a826107df565b9050919050565b61081a816107ff565b811461082557600080fd5b50565b60008135905061083781610811565b92915050565b600060208284031215610853576108526107da565b5b600061086184828501610828565b91505092915050565b60008115159050919050565b61087f8161086a565b82525050565b600060208201905061089a6000830184610876565b92915050565b6108a9816107ff565b82525050565b60006020820190506108c460008301846108a0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061091157607f821691505b602082108103610924576109236108ca565b5b50919050565b7f4e6f206573746173206170726f6261646f20736f62726520656c20746f6b656e600082015250565b6000610960602083610733565b915061096b8261092a565b602082019050919050565b6000602082019050818103600083015261098f81610953565b9050919050565b7f4e6f20657320706f7369626c65206170726f62617220616c2070726f7069657460008201527f6172696f00000000000000000000000000000000000000000000000000000000602082015250565b60006109f2602483610733565b91506109fd82610996565b604082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e6f20657265732070726f706965746172696f00000000000000000000000000600082015250565b6000610a5e601383610733565b9150610a6982610a28565b602082019050919050565b60006020820190508181036000830152610a8d81610a51565b9050919050565b7f4e6f20657265732070726f706965746172696f2064656c20746f6b656e000000600082015250565b6000610aca601d83610733565b9150610ad582610a94565b602082019050919050565b60006020820190508181036000830152610af981610abd565b9050919050565b7f4e6f207365207075656465207472616e7366657269722061206c61206275726e60008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b6000610b5c602883610733565b9150610b6782610b00565b604082019050919050565b60006020820190508181036000830152610b8b81610b4f565b905091905056fea264697066735822122012bfbfe2c6dcdad39a671737992f590107feb191e4fb001f9d52a96ea8979b0164736f6c63430008140033";

type AuctionObjectTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionObjectTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionObjectToken__factory extends ContractFactory {
  constructor(...args: AuctionObjectTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    metadata_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AuctionObjectToken> {
    return super.deploy(
      name_,
      metadata_,
      overrides || {}
    ) as Promise<AuctionObjectToken>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    metadata_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, metadata_, overrides || {});
  }
  override attach(address: string): AuctionObjectToken {
    return super.attach(address) as AuctionObjectToken;
  }
  override connect(signer: Signer): AuctionObjectToken__factory {
    return super.connect(signer) as AuctionObjectToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionObjectTokenInterface {
    return new utils.Interface(_abi) as AuctionObjectTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuctionObjectToken {
    return new Contract(address, _abi, signerOrProvider) as AuctionObjectToken;
  }
}
