/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CallContract,
  CallContractInterface,
} from "../../../contracts/call-contract/CallContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gasReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_from",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendInterchainMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sourceAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sourceChain",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620017253803806200172583398181016040528101906200003791906200017b565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000a0576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001c2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001438262000116565b9050919050565b620001558162000136565b81146200016157600080fd5b50565b60008151905062000175816200014a565b92915050565b6000806040838503121562000195576200019462000111565b5b6000620001a58582860162000164565b9250506020620001b88582860162000164565b9150509250929050565b60805160a05161152162000204600039600081816104c3015261066c0152600081816101c701528181610207015281816103c0015261070401526115216000f3fe60806040526004361061007b5760003560e01c80636a22d8cc1161004e5780636a22d8cc14610128578063b0fa844414610153578063e21f37ce1461017e578063f065296d146101a95761007b565b8063116191b6146100805780631a98b2e0146100ab5780631c6ffa46146100d457806349160658146100ff575b600080fd5b34801561008c57600080fd5b506100956101c5565b6040516100a291906109dd565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610b33565b6101e9565b005b3480156100e057600080fd5b506100e9610314565b6040516100f69190610cdc565b60405180910390f35b34801561010b57600080fd5b5061012660048036038101906101219190610cfe565b6103a2565b005b34801561013457600080fd5b5061013d6104c1565b60405161014a9190610de8565b60405180910390f35b34801561015f57600080fd5b506101686104e5565b6040516101759190610cdc565b60405180910390f35b34801561018a57600080fd5b50610193610573565b6040516101a09190610cdc565b60405180910390f35b6101c360048036038101906101be9190610e03565b610601565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600085856040516101fb929190610ef6565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631876eed98c8c8c8c8c878b8b8b6040518a63ffffffff1660e01b815260040161026e99989796959493929190610f5a565b602060405180830381600087803b15801561028857600080fd5b505af115801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c0919061100e565b6102f6576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103078a8a8a8a8a8a8a8a8a61079e565b5050505050505050505050565b600180546103219061106a565b80601f016020809104026020016040519081016040528092919081815260200182805461034d9061106a565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b505050505081565b600082826040516103b4929190610ef6565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f6970c38989898989876040518763ffffffff1660e01b81526004016104219695949392919061109c565b602060405180830381600087803b15801561043b57600080fd5b505af115801561044f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610473919061100e565b6104a9576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b78787878787876107a9565b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600280546104f29061106a565b80601f016020809104026020016040519081016040528092919081815260200182805461051e9061106a565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b505050505081565b600080546105809061106a565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac9061106a565b80156105f95780601f106105ce576101008083540402835291602001916105f9565b820191906000526020600020905b8154815290600101906020018083116105dc57829003601f168201915b505050505081565b60003411610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b9061113f565b60405180910390fd5b6000828260405160200161065992919061115f565b60405160208183030381529060405290507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630c93e3bb34308a8a8a8a88336040518963ffffffff1660e01b81526004016106d097969594939291906111f9565b6000604051808303818588803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631c92115f88888888866040518663ffffffff1660e01b8152600401610763959493929190611265565b600060405180830381600087803b15801561077d57600080fd5b505af1158015610791573d6000803e3d6000fd5b5050505050505050505050565b505050505050505050565b81818101906107b891906113d6565b600090805190602001906107cd929190610835565b508585600191906107df9291906108bb565b508383600291906107f19291906108bb565b507f0d97a9033491f569feb4c72abf12722b227eec24ee13547bec3654f8663ff711600260006040516108259291906114b4565b60405180910390a1505050505050565b8280546108419061106a565b90600052602060002090601f01602090048101928261086357600085556108aa565b82601f1061087c57805160ff19168380011785556108aa565b828001600101855582156108aa579182015b828111156108a957825182559160200191906001019061088e565b5b5090506108b79190610941565b5090565b8280546108c79061106a565b90600052602060002090601f0160209004810192826108e95760008555610930565b82601f1061090257803560ff1916838001178555610930565b82800160010185558215610930579182015b8281111561092f578235825591602001919060010190610914565b5b50905061093d9190610941565b5090565b5b8082111561095a576000816000905550600101610942565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109a361099e6109998461095e565b61097e565b61095e565b9050919050565b60006109b582610988565b9050919050565b60006109c7826109aa565b9050919050565b6109d7816109bc565b82525050565b60006020820190506109f260008301846109ce565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a1f81610a0c565b8114610a2a57600080fd5b50565b600081359050610a3c81610a16565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610a6757610a66610a42565b5b8235905067ffffffffffffffff811115610a8457610a83610a47565b5b602083019150836001820283011115610aa057610a9f610a4c565b5b9250929050565b60008083601f840112610abd57610abc610a42565b5b8235905067ffffffffffffffff811115610ada57610ad9610a47565b5b602083019150836001820283011115610af657610af5610a4c565b5b9250929050565b6000819050919050565b610b1081610afd565b8114610b1b57600080fd5b50565b600081359050610b2d81610b07565b92915050565b60008060008060008060008060008060c08b8d031215610b5657610b55610a02565b5b6000610b648d828e01610a2d565b9a505060208b013567ffffffffffffffff811115610b8557610b84610a07565b5b610b918d828e01610a51565b995099505060408b013567ffffffffffffffff811115610bb457610bb3610a07565b5b610bc08d828e01610a51565b975097505060608b013567ffffffffffffffff811115610be357610be2610a07565b5b610bef8d828e01610aa7565b955095505060808b013567ffffffffffffffff811115610c1257610c11610a07565b5b610c1e8d828e01610a51565b935093505060a0610c318d828e01610b1e565b9150509295989b9194979a5092959850565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c7d578082015181840152602081019050610c62565b83811115610c8c576000848401525b50505050565b6000601f19601f8301169050919050565b6000610cae82610c43565b610cb88185610c4e565b9350610cc8818560208601610c5f565b610cd181610c92565b840191505092915050565b60006020820190508181036000830152610cf68184610ca3565b905092915050565b60008060008060008060006080888a031215610d1d57610d1c610a02565b5b6000610d2b8a828b01610a2d565b975050602088013567ffffffffffffffff811115610d4c57610d4b610a07565b5b610d588a828b01610a51565b9650965050604088013567ffffffffffffffff811115610d7b57610d7a610a07565b5b610d878a828b01610a51565b9450945050606088013567ffffffffffffffff811115610daa57610da9610a07565b5b610db68a828b01610aa7565b925092505092959891949750929550565b6000610dd2826109aa565b9050919050565b610de281610dc7565b82525050565b6000602082019050610dfd6000830184610dd9565b92915050565b60008060008060008060608789031215610e2057610e1f610a02565b5b600087013567ffffffffffffffff811115610e3e57610e3d610a07565b5b610e4a89828a01610a51565b9650965050602087013567ffffffffffffffff811115610e6d57610e6c610a07565b5b610e7989828a01610a51565b9450945050604087013567ffffffffffffffff811115610e9c57610e9b610a07565b5b610ea889828a01610a51565b92509250509295509295509295565b600081905092915050565b82818337600083830152505050565b6000610edd8385610eb7565b9350610eea838584610ec2565b82840190509392505050565b6000610f03828486610ed1565b91508190509392505050565b610f1881610a0c565b82525050565b6000610f2a8385610c4e565b9350610f37838584610ec2565b610f4083610c92565b840190509392505050565b610f5481610afd565b82525050565b600060c082019050610f6f600083018c610f0f565b8181036020830152610f82818a8c610f1e565b90508181036040830152610f9781888a610f1e565b9050610fa66060830187610f0f565b8181036080830152610fb9818587610f1e565b9050610fc860a0830184610f4b565b9a9950505050505050505050565b60008115159050919050565b610feb81610fd6565b8114610ff657600080fd5b50565b60008151905061100881610fe2565b92915050565b60006020828403121561102457611023610a02565b5b600061103284828501610ff9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061108257607f821691505b602082108114156110965761109561103b565b5b50919050565b60006080820190506110b16000830189610f0f565b81810360208301526110c4818789610f1e565b905081810360408301526110d9818587610f1e565b90506110e86060830184610f0f565b979650505050505050565b7f476173207061796d656e74206973207265717569726564000000000000000000600082015250565b6000611129601783610c4e565b9150611134826110f3565b602082019050919050565b600060208201905081810360008301526111588161111c565b9050919050565b6000602082019050818103600083015261117a818486610f1e565b90509392505050565b600061118e8261095e565b9050919050565b61119e81611183565b82525050565b600081519050919050565b600082825260208201905092915050565b60006111cb826111a4565b6111d581856111af565b93506111e5818560208601610c5f565b6111ee81610c92565b840191505092915050565b600060a08201905061120e600083018a611195565b818103602083015261122181888a610f1e565b90508181036040830152611236818688610f1e565b9050818103606083015261124a81856111c0565b90506112596080830184611195565b98975050505050505050565b60006060820190508181036000830152611280818789610f1e565b90508181036020830152611295818587610f1e565b905081810360408301526112a981846111c0565b90509695505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112f282610c92565b810181811067ffffffffffffffff82111715611311576113106112ba565b5b80604052505050565b60006113246109f8565b905061133082826112e9565b919050565b600067ffffffffffffffff8211156113505761134f6112ba565b5b61135982610c92565b9050602081019050919050565b600061137961137484611335565b61131a565b905082815260208101848484011115611395576113946112b5565b5b6113a0848285610ec2565b509392505050565b600082601f8301126113bd576113bc610a42565b5b81356113cd848260208601611366565b91505092915050565b6000602082840312156113ec576113eb610a02565b5b600082013567ffffffffffffffff81111561140a57611409610a07565b5b611416848285016113a8565b91505092915050565b60008190508160005260206000209050919050565b600081546114418161106a565b61144b8186610c4e565b945060018216600081146114665760018114611478576114ab565b60ff19831686526020860193506114ab565b6114818561141f565b60005b838110156114a357815481890152600182019150602081019050611484565b808801955050505b50505092915050565b600060408201905081810360008301526114ce8185611434565b905081810360208301526114e28184611434565b9050939250505056fea264697066735822122078675a48eb0f440f76c077303e89378fa1db575137c86cd369928a0941a3e6e564736f6c63430008090033";

type CallContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallContract__factory extends ContractFactory {
  constructor(...args: CallContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    _gasReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CallContract> {
    return super.deploy(
      _gateway,
      _gasReceiver,
      overrides || {}
    ) as Promise<CallContract>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    _gasReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, _gasReceiver, overrides || {});
  }
  override attach(address: string): CallContract {
    return super.attach(address) as CallContract;
  }
  override connect(signer: Signer): CallContract__factory {
    return super.connect(signer) as CallContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallContractInterface {
    return new utils.Interface(_abi) as CallContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallContract {
    return new Contract(address, _abi, signerOrProvider) as CallContract;
  }
}
