/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SenderReceiver,
  SenderReceiverInterface,
} from "../../../../contracts/sendMessage/sendMessage.sol/SenderReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasService_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_from",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "message_",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sourceAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sourceChain",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200175f3803806200175f83398181016040528101906200003791906200017a565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200009f576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001c1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001428262000115565b9050919050565b620001548162000135565b81146200016057600080fd5b50565b600081519050620001748162000149565b92915050565b6000806040838503121562000194576200019362000110565b5b6000620001a48582860162000163565b9250506020620001b78582860162000163565b9150509250929050565b60805160a05161155c62000203600039600081816101ed01526105ff0152600081816102850152818161032101528181610361015261050b015261155c6000f3fe60806040526004361061007b5760003560e01c8063491606581161004e578063491606581461011b5780636a22d8cc14610144578063b0fa84441461016f578063e21f37ce1461019a5761007b565b80630eabeffe14610080578063116191b61461009c5780631a98b2e0146100c75780631c6ffa46146100f0575b600080fd5b61009a60048036038101906100959190610823565b6101c5565b005b3480156100a857600080fd5b506100b161031f565b6040516100be9190610956565b60405180910390f35b3480156100d357600080fd5b506100ee60048036038101906100e99190610a33565b610343565b005b3480156100fc57600080fd5b5061010561045f565b6040516101129190610bd3565b60405180910390f35b34801561012757600080fd5b50610142600480360381019061013d9190610bf5565b6104ed565b005b34801561015057600080fd5b506101596105fd565b6040516101669190610cdf565b60405180910390f35b34801561017b57600080fd5b50610184610621565b6040516101919190610bd3565b60405180910390f35b3480156101a657600080fd5b506101af6106af565b6040516101bc9190610bd3565b60405180910390f35b600082826040516020016101da929190610d36565b60405160208183030381529060405290507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630c93e3bb34308a8a8a8a88336040518963ffffffff1660e01b81526004016102519796959493929190610dd0565b6000604051808303818588803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631c92115f88888888866040518663ffffffff1660e01b81526004016102e4959493929190610e3c565b600060405180830381600087803b1580156102fe57600080fd5b505af1158015610312573d6000803e3d6000fd5b5050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008585604051610355929190610ebc565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631876eed98c8c8c8c8c878b8b8b6040518a63ffffffff1660e01b81526004016103c899989796959493929190610ef3565b6020604051808303816000875af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610fa7565b610441576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104528a8a8a8a8a8a8a8a8a61073d565b5050505050505050505050565b6001805461046c90611003565b80601f016020809104026020016040519081016040528092919081815260200182805461049890611003565b80156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b505050505081565b600082826040516104ff929190610ebc565b604051809103902090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635f6970c38989898989876040518763ffffffff1660e01b815260040161056c96959493929190611034565b6020604051808303816000875af115801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610fa7565b6105e5576040517f500c44b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f3878787878787610748565b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002805461062e90611003565b80601f016020809104026020016040519081016040528092919081815260200182805461065a90611003565b80156106a75780601f1061067c576101008083540402835291602001916106a7565b820191906000526020600020905b81548152906001019060200180831161068a57829003601f168201915b505050505081565b600080546106bc90611003565b80601f01602080910402602001604051908101604052809291908181526020018280546106e890611003565b80156107355780601f1061070a57610100808354040283529160200191610735565b820191906000526020600020905b81548152906001019060200180831161071857829003601f168201915b505050505081565b505050505050505050565b818181019061075791906111ac565b600090816107659190611397565b507f0d97a9033491f569feb4c72abf12722b227eec24ee13547bec3654f8663ff7118484600060405161079a939291906114ed565b60405180910390a1505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126107e3576107e26107be565b5b8235905067ffffffffffffffff811115610800576107ff6107c3565b5b60208301915083600182028301111561081c5761081b6107c8565b5b9250929050565b600080600080600080606087890312156108405761083f6107b4565b5b600087013567ffffffffffffffff81111561085e5761085d6107b9565b5b61086a89828a016107cd565b9650965050602087013567ffffffffffffffff81111561088d5761088c6107b9565b5b61089989828a016107cd565b9450945050604087013567ffffffffffffffff8111156108bc576108bb6107b9565b5b6108c889828a016107cd565b92509250509295509295509295565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061091c610917610912846108d7565b6108f7565b6108d7565b9050919050565b600061092e82610901565b9050919050565b600061094082610923565b9050919050565b61095081610935565b82525050565b600060208201905061096b6000830184610947565b92915050565b6000819050919050565b61098481610971565b811461098f57600080fd5b50565b6000813590506109a18161097b565b92915050565b60008083601f8401126109bd576109bc6107be565b5b8235905067ffffffffffffffff8111156109da576109d96107c3565b5b6020830191508360018202830111156109f6576109f56107c8565b5b9250929050565b6000819050919050565b610a10816109fd565b8114610a1b57600080fd5b50565b600081359050610a2d81610a07565b92915050565b60008060008060008060008060008060c08b8d031215610a5657610a556107b4565b5b6000610a648d828e01610992565b9a505060208b013567ffffffffffffffff811115610a8557610a846107b9565b5b610a918d828e016107cd565b995099505060408b013567ffffffffffffffff811115610ab457610ab36107b9565b5b610ac08d828e016107cd565b975097505060608b013567ffffffffffffffff811115610ae357610ae26107b9565b5b610aef8d828e016109a7565b955095505060808b013567ffffffffffffffff811115610b1257610b116107b9565b5b610b1e8d828e016107cd565b935093505060a0610b318d828e01610a1e565b9150509295989b9194979a5092959850565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b7d578082015181840152602081019050610b62565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ba582610b43565b610baf8185610b4e565b9350610bbf818560208601610b5f565b610bc881610b89565b840191505092915050565b60006020820190508181036000830152610bed8184610b9a565b905092915050565b60008060008060008060006080888a031215610c1457610c136107b4565b5b6000610c228a828b01610992565b975050602088013567ffffffffffffffff811115610c4357610c426107b9565b5b610c4f8a828b016107cd565b9650965050604088013567ffffffffffffffff811115610c7257610c716107b9565b5b610c7e8a828b016107cd565b9450945050606088013567ffffffffffffffff811115610ca157610ca06107b9565b5b610cad8a828b016109a7565b925092505092959891949750929550565b6000610cc982610923565b9050919050565b610cd981610cbe565b82525050565b6000602082019050610cf46000830184610cd0565b92915050565b82818337600083830152505050565b6000610d158385610b4e565b9350610d22838584610cfa565b610d2b83610b89565b840190509392505050565b60006020820190508181036000830152610d51818486610d09565b90509392505050565b6000610d65826108d7565b9050919050565b610d7581610d5a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000610da282610d7b565b610dac8185610d86565b9350610dbc818560208601610b5f565b610dc581610b89565b840191505092915050565b600060a082019050610de5600083018a610d6c565b8181036020830152610df881888a610d09565b90508181036040830152610e0d818688610d09565b90508181036060830152610e218185610d97565b9050610e306080830184610d6c565b98975050505050505050565b60006060820190508181036000830152610e57818789610d09565b90508181036020830152610e6c818587610d09565b90508181036040830152610e808184610d97565b90509695505050505050565b600081905092915050565b6000610ea38385610e8c565b9350610eb0838584610cfa565b82840190509392505050565b6000610ec9828486610e97565b91508190509392505050565b610ede81610971565b82525050565b610eed816109fd565b82525050565b600060c082019050610f08600083018c610ed5565b8181036020830152610f1b818a8c610d09565b90508181036040830152610f3081888a610d09565b9050610f3f6060830187610ed5565b8181036080830152610f52818587610d09565b9050610f6160a0830184610ee4565b9a9950505050505050505050565b60008115159050919050565b610f8481610f6f565b8114610f8f57600080fd5b50565b600081519050610fa181610f7b565b92915050565b600060208284031215610fbd57610fbc6107b4565b5b6000610fcb84828501610f92565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061101b57607f821691505b60208210810361102e5761102d610fd4565b5b50919050565b60006080820190506110496000830189610ed5565b818103602083015261105c818789610d09565b90508181036040830152611071818587610d09565b90506110806060830184610ed5565b979650505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110c882610b89565b810181811067ffffffffffffffff821117156110e7576110e6611090565b5b80604052505050565b60006110fa6107aa565b905061110682826110bf565b919050565b600067ffffffffffffffff82111561112657611125611090565b5b61112f82610b89565b9050602081019050919050565b600061114f61114a8461110b565b6110f0565b90508281526020810184848401111561116b5761116a61108b565b5b611176848285610cfa565b509392505050565b600082601f830112611193576111926107be565b5b81356111a384826020860161113c565b91505092915050565b6000602082840312156111c2576111c16107b4565b5b600082013567ffffffffffffffff8111156111e0576111df6107b9565b5b6111ec8482850161117e565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261121a565b611261868361121a565b95508019841693508086168417925050509392505050565b600061129461128f61128a846109fd565b6108f7565b6109fd565b9050919050565b6000819050919050565b6112ae83611279565b6112c26112ba8261129b565b848454611227565b825550505050565b600090565b6112d76112ca565b6112e28184846112a5565b505050565b5b81811015611306576112fb6000826112cf565b6001810190506112e8565b5050565b601f82111561134b5761131c816111f5565b6113258461120a565b81016020851015611334578190505b6113486113408561120a565b8301826112e7565b50505b505050565b600082821c905092915050565b600061136e60001984600802611350565b1980831691505092915050565b6000611387838361135d565b9150826002028217905092915050565b6113a082610b43565b67ffffffffffffffff8111156113b9576113b8611090565b5b6113c38254611003565b6113ce82828561130a565b600060209050601f83116001811461140157600084156113ef578287015190505b6113f9858261137b565b865550611461565b601f19841661140f866111f5565b60005b8281101561143757848901518255600182019150602085019450602081019050611412565b868310156114545784890151611450601f89168261135d565b8355505b6001600288020188555050505b505050505050565b6000815461147681611003565b6114808186610b4e565b9450600182166000811461149b57600181146114b1576114e4565b60ff1983168652811515602002860193506114e4565b6114ba856111f5565b60005b838110156114dc578154818901526001820191506020810190506114bd565b808801955050505b50505092915050565b60006040820190508181036000830152611508818587610d09565b9050818103602083015261151c8184611469565b905094935050505056fea2646970667358221220eb8ae9854172142df8070d000877f9d172ed947c2a66e722df36fdbecc48da1a64736f6c63430008140033";

type SenderReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderReceiver__factory extends ContractFactory {
  constructor(...args: SenderReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gateway_: PromiseOrValue<string>,
    gasService_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SenderReceiver> {
    return super.deploy(
      gateway_,
      gasService_,
      overrides || {}
    ) as Promise<SenderReceiver>;
  }
  override getDeployTransaction(
    gateway_: PromiseOrValue<string>,
    gasService_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(gateway_, gasService_, overrides || {});
  }
  override attach(address: string): SenderReceiver {
    return super.attach(address) as SenderReceiver;
  }
  override connect(signer: Signer): SenderReceiver__factory {
    return super.connect(signer) as SenderReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderReceiverInterface {
    return new utils.Interface(_abi) as SenderReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SenderReceiver {
    return new Contract(address, _abi, signerOrProvider) as SenderReceiver;
  }
}
